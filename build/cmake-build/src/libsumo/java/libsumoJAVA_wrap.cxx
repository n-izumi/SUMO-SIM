/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifdef _MSC_VER
// ignore constant conditional expression (C4127) and unreachable/unsafe code warnings
// and hidden local declaration (C4456), uninitialized variable (C4701), assignment in conditional expression (C4706)
// also see config.h.cmake
#pragma warning(disable:4127 4456 4701 4702 4706 4996 4365 4820 4514 5045 4191 4710 4668)
#else
// ignore unused parameter warnings for vector template code
#pragma GCC diagnostic ignored "-Wunused-parameter"
// ignore uninitialized fields for typeobject::tp_vectorcall and typeobject::tp_print
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#endif
#define SWIG_PYTHON_2_UNICODE

#include <iostream>


#if defined(__MINGW32__) && defined(__int64)
# undef __int64
#endif



#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13




#include <string>


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>

SWIGINTERN std::vector< std::string >::const_reference std_vector_Sl_std_string_Sg__get(std::vector< std::string > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_string_Sg__set(std::vector< std::string > *self,int i,std::vector< std::string >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< int >::const_reference std_vector_Sl_int_Sg__get(std::vector< int > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_int_Sg__set(std::vector< int > *self,int i,std::vector< int >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< double >::const_reference std_vector_Sl_double_Sg__get(std::vector< double > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_double_Sg__set(std::vector< double > *self,int i,std::vector< double >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::string const &std_map_Sl_std_string_Sc_std_string_Sg__get(std::map< std::string,std::string > *self,std::string const &key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__set(std::map< std::string,std::string > *self,std::string const &key,std::string const &x){
                (*self)[key] = x;
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__del(std::map< std::string,std::string > *self,std::string const &key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg__has_key(std::map< std::string,std::string > *self,std::string const &key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                return i != self->end();
            }

SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <typeinfo>
#include <stdexcept>


#include <utility>

SWIGINTERN std::vector< std::pair< std::string,double > >::const_reference std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__get(std::vector< std::pair< std::string,double > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__set(std::vector< std::pair< std::string,double > > *self,int i,std::vector< std::pair< std::string,double > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

#include <libsumo/Edge.h>
#include <libsumo/GUI.h>
#include <libsumo/InductionLoop.h>
#include <libsumo/Junction.h>
#include <libsumo/LaneArea.h>
#include <libsumo/Lane.h>
#include <libsumo/MultiEntryExit.h>
#include <libsumo/POI.h>
#include <libsumo/Polygon.h>
#include <libsumo/Route.h>
#include <libsumo/Simulation.h>
#include <libsumo/TrafficLight.h>
#include <libsumo/VehicleType.h>
#include <libsumo/Vehicle.h>
#include <libsumo/Person.h>
#include <libsumo/Calibrator.h>
#include <libsumo/BusStop.h>
#include <libsumo/ParkingArea.h>
#include <libsumo/ChargingStation.h>
#include <libsumo/OverheadWire.h>
#include <libsumo/Rerouter.h>
#include <libsumo/MeanData.h>
#include <libsumo/VariableSpeedSign.h>
#include <libsumo/RouteProbe.h>


struct SWIG_null_deleter {
  void operator() (void const *) const {
  }
};
#define SWIG_NO_NULL_DELETER_0 , SWIG_null_deleter()
#define SWIG_NO_NULL_DELETER_1
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_NEW
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_OWN

SWIGINTERN std::vector< std::shared_ptr< libsumo::TraCIPhase > >::const_reference std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__get(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__set(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int i,std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCILogic >::const_reference std_vector_Sl_libsumo_TraCILogic_Sg__get(std::vector< libsumo::TraCILogic > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__set(std::vector< libsumo::TraCILogic > *self,int i,std::vector< libsumo::TraCILogic >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIStage >::const_reference std_vector_Sl_libsumo_TraCIStage_Sg__get(std::vector< libsumo::TraCIStage > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__set(std::vector< libsumo::TraCIStage > *self,int i,std::vector< libsumo::TraCIStage >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCINextStopData >::const_reference std_vector_Sl_libsumo_TraCINextStopData_Sg__get(std::vector< libsumo::TraCINextStopData > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__set(std::vector< libsumo::TraCINextStopData > *self,int i,std::vector< libsumo::TraCINextStopData >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIReservation >::const_reference std_vector_Sl_libsumo_TraCIReservation_Sg__get(std::vector< libsumo::TraCIReservation > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__set(std::vector< libsumo::TraCIReservation > *self,int i,std::vector< libsumo::TraCIReservation >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCISignalConstraint >::const_reference std_vector_Sl_libsumo_TraCISignalConstraint_Sg__get(std::vector< libsumo::TraCISignalConstraint > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__set(std::vector< libsumo::TraCISignalConstraint > *self,int i,std::vector< libsumo::TraCISignalConstraint >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCICollision >::const_reference std_vector_Sl_libsumo_TraCICollision_Sg__get(std::vector< libsumo::TraCICollision > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__set(std::vector< libsumo::TraCICollision > *self,int i,std::vector< libsumo::TraCICollision >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIJunctionFoe >::const_reference std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__get(std::vector< libsumo::TraCIJunctionFoe > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__set(std::vector< libsumo::TraCIJunctionFoe > *self,int i,std::vector< libsumo::TraCIJunctionFoe >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIBestLanesData >::const_reference std_vector_Sl_libsumo_TraCIBestLanesData_Sg__get(std::vector< libsumo::TraCIBestLanesData > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__set(std::vector< libsumo::TraCIBestLanesData > *self,int i,std::vector< libsumo::TraCIBestLanesData >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIConnection >::const_reference std_vector_Sl_libsumo_TraCIConnection_Sg__get(std::vector< libsumo::TraCIConnection > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__set(std::vector< libsumo::TraCIConnection > *self,int i,std::vector< libsumo::TraCIConnection >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCILink >::const_reference std_vector_Sl_libsumo_TraCILink_Sg__get(std::vector< libsumo::TraCILink > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__set(std::vector< libsumo::TraCILink > *self,int i,std::vector< libsumo::TraCILink >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< std::vector< libsumo::TraCILink > >::const_reference std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__get(std::vector< std::vector< libsumo::TraCILink > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__set(std::vector< std::vector< libsumo::TraCILink > > *self,int i,std::vector< std::vector< libsumo::TraCILink > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCINextTLSData >::const_reference std_vector_Sl_libsumo_TraCINextTLSData_Sg__get(std::vector< libsumo::TraCINextTLSData > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__set(std::vector< libsumo::TraCINextTLSData > *self,int i,std::vector< libsumo::TraCINextTLSData >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIPosition >::const_reference std_vector_Sl_libsumo_TraCIPosition_Sg__get(std::vector< libsumo::TraCIPosition > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__set(std::vector< libsumo::TraCIPosition > *self,int i,std::vector< libsumo::TraCIPosition >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIVehicleData >::const_reference std_vector_Sl_libsumo_TraCIVehicleData_Sg__get(std::vector< libsumo::TraCIVehicleData > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__set(std::vector< libsumo::TraCIVehicleData > *self,int i,std::vector< libsumo::TraCIVehicleData >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::shared_ptr< libsumo::TraCIResult > const &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__get(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,int const &key){
                std::map<int,std::shared_ptr< libsumo::TraCIResult > >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN void std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__set(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,int const &key,std::shared_ptr< libsumo::TraCIResult > const &x){
                (*self)[key] = x;
            }
SWIGINTERN void std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__del(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,int const &key){
                std::map<int,std::shared_ptr< libsumo::TraCIResult > >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN bool std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__has_key(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,int const &key){
                std::map<int,std::shared_ptr< libsumo::TraCIResult > >::iterator i = self->find(key);
                return i != self->end();
            }
SWIGINTERN std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__get(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::string const &key){
                std::map<std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__set(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::string const &key,std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &x){
                (*self)[key] = x;
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__del(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::string const &key){
                std::map<std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__has_key(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::string const &key){
                std::map<std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::iterator i = self->find(key);
                return i != self->end();
            }
SWIGINTERN std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__get(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::string const &key){
                std::map<std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__set(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::string const &key,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const &x){
                (*self)[key] = x;
            }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__del(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::string const &key){
                std::map<std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__has_key(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::string const &key){
                std::map<std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::iterator i = self->find(key);
                return i != self->end();
            }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::string > *)new std::vector< std::string >();
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::string >::size_type arg1 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::string >::size_type)jarg1; 
  result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = ((std::vector< std::string > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = ((std::vector< std::string > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (std::vector< std::string >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = (bool)((std::vector< std::string > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::vector< std::string >::value_type arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->push_back((std::vector< std::string >::value_type const &)*arg2);
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jstring jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::vector< std::string >::value_type arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  try {
    std_vector_Sl_std_string_Sg__set(arg1,arg2,(std::string const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< int > *)new std::vector< int >();
  *(std::vector< int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< int >::size_type arg1 ;
  std::vector< int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< int >::size_type)jarg1; 
  result = (std::vector< int > *)new std::vector< int >(arg1);
  *(std::vector< int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  result = ((std::vector< int > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  result = ((std::vector< int > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  arg2 = (std::vector< int >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  result = (bool)((std::vector< int > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::value_type *arg2 = 0 ;
  std::vector< int >::value_type temp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  temp2 = (std::vector< int >::value_type)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((std::vector< int >::value_type const &)*arg2);
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< int >::value_type *) &std_vector_Sl_int_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = (jint)*result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  std::vector< int >::value_type temp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (std::vector< int >::value_type)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_int_Sg__set(arg1,arg2,(int const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1IntVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< int > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1DoubleVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< double > *)new std::vector< double >();
  *(std::vector< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1DoubleVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< double >::size_type arg1 ;
  std::vector< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< double >::size_type)jarg1; 
  result = (std::vector< double > *)new std::vector< double >(arg1);
  *(std::vector< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  result = ((std::vector< double > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  result = ((std::vector< double > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  arg2 = (std::vector< double >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  result = (bool)((std::vector< double > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::value_type *arg2 = 0 ;
  std::vector< double >::value_type temp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  temp2 = (std::vector< double >::value_type)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((std::vector< double >::value_type const &)*arg2);
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jdouble jresult = 0 ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< double >::value_type *) &std_vector_Sl_double_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = (jdouble)*result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DoubleVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jdouble jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  std::vector< double >::value_type temp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< double > **)&jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (std::vector< double >::value_type)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_double_Sg__set(arg1,arg2,(double const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1DoubleVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< double > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringStringMap_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >();
  *(std::map< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringStringMap_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::string > *arg1 = 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< std::string,std::string > const & reference is null");
    return 0;
  } 
  result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >((std::map< std::string,std::string > const &)*arg1);
  *(std::map< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  result = (unsigned int)((std::map< std::string,std::string > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  result = (bool)((std::map< std::string,std::string > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  try {
    result = (std::string *) &std_map_Sl_std_string_Sc_std_string_Sg__get(arg1,(std::string const &)*arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  std_map_Sl_std_string_Sc_std_string_Sg__set(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1del(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  try {
    std_map_Sl_std_string_Sc_std_string_Sg__del(arg1,(std::string const &)*arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringMap_1has_1key(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (bool)std_map_Sl_std_string_Sc_std_string_Sg__has_key(arg1,(std::string const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringStringMap(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::map< std::string,std::string > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringStringPair_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >();
  *(std::pair< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringStringPair_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::string arg2 ;
  std::pair< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >(arg1,arg2);
  *(std::pair< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringStringPair_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::string,std::string > *arg1 = 0 ;
  std::pair< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::string,std::string > const & reference is null");
    return 0;
  } 
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >((std::pair< std::string,std::string > const &)*arg1);
  *(std::pair< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringPair_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringPair_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1; 
  result = (std::string *) & ((arg1)->first);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringPair_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringStringPair_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1; 
  result = (std::string *) & ((arg1)->second);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringStringPair(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< std::string,std::string > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntStringPair_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< int,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >();
  *(std::pair< int,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntStringPair_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string arg2 ;
  std::pair< int,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >(arg1,arg2);
  *(std::pair< int,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntStringPair_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< int,std::string > *arg1 = 0 ;
  std::pair< int,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< int,std::string > const & reference is null");
    return 0;
  } 
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >((std::pair< int,std::string > const &)*arg1);
  *(std::pair< int,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntStringPair_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,std::string > **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntStringPair_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,std::string > **)&jarg1; 
  result = (int) ((arg1)->first);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntStringPair_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntStringPair_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,std::string > **)&jarg1; 
  result = (std::string *) & ((arg1)->second);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1IntStringPair(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< int,std::string > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntIntPair_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< int,int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::pair< int,int > *)new std::pair< int,int >();
  *(std::pair< int,int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntIntPair_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  std::pair< int,int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (std::pair< int,int > *)new std::pair< int,int >(arg1,arg2);
  *(std::pair< int,int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1IntIntPair_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< int,int > *arg1 = 0 ;
  std::pair< int,int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< int,int > const & reference is null");
    return 0;
  } 
  result = (std::pair< int,int > *)new std::pair< int,int >((std::pair< int,int > const &)*arg1);
  *(std::pair< int,int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntIntPair_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,int > **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntIntPair_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,int > **)&jarg1; 
  result = (int) ((arg1)->first);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntIntPair_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,int > **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_IntIntPair_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< int,int > **)&jarg1; 
  result = (int) ((arg1)->second);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1IntIntPair(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< int,int > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringDoublePair_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< std::string,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >();
  *(std::pair< std::string,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringDoublePair_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string arg1 ;
  double arg2 ;
  std::pair< std::string,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >(arg1,arg2);
  *(std::pair< std::string,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringDoublePair_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::string,double > *arg1 = 0 ;
  std::pair< std::string,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::string,double > const & reference is null");
    return 0;
  } 
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >((std::pair< std::string,double > const &)*arg1);
  *(std::pair< std::string,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePair_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,double > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePair_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,double > **)&jarg1; 
  result = (std::string *) & ((arg1)->first);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePair_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,double > **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePair_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::string,double > **)&jarg1; 
  result = (double) ((arg1)->second);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringDoublePair(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< std::string,double > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringDoublePairVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::pair< std::string,double > > *)new std::vector< std::pair< std::string,double > >();
  *(std::vector< std::pair< std::string,double > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringDoublePairVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::pair< std::string,double > >::size_type arg1 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::pair< std::string,double > >::size_type)jarg1; 
  result = (std::vector< std::pair< std::string,double > > *)new std::vector< std::pair< std::string,double > >(arg1);
  *(std::vector< std::pair< std::string,double > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  result = ((std::vector< std::pair< std::string,double > > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  result = ((std::vector< std::pair< std::string,double > > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  arg2 = (std::vector< std::pair< std::string,double > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  result = (bool)((std::vector< std::pair< std::string,double > > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  arg2 = *(std::vector< std::pair< std::string,double > >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::pair< std::string,double > >::value_type const & reference is null");
    return ;
  } 
  (arg1)->push_back((std::vector< std::pair< std::string,double > >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::pair< std::string,double > >::value_type *) &std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< std::pair< std::string,double > >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringDoublePairVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< std::pair< std::string,double > >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::pair< std::string,double > >::value_type const & reference is null");
    return ;
  } 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__set(arg1,arg2,(std::pair< std::string,double > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringDoublePairVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::pair< std::string,double > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIException(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  libsumo::TraCIException *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::TraCIException *)new libsumo::TraCIException(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIException **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIException *arg1 = (libsumo::TraCIException *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIException **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1FatalTraCIError(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  libsumo::FatalTraCIError *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::FatalTraCIError *)new libsumo::FatalTraCIError(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::FatalTraCIError **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1FatalTraCIError(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::FatalTraCIError *arg1 = (libsumo::FatalTraCIError *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::FatalTraCIError **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIResult > **)&jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResult_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIResult > **)&jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIResult const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResult_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult const > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIResult > **)&jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIResult const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIResult(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIResult *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIResult *)new libsumo::TraCIResult();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIResult > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIResult >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIPosition const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->x);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->y);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->z);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIPosition > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIPosition::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIPosition > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIPosition >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPosition(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPosition *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIPosition *)new libsumo::TraCIPosition();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPosition > **)&jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIRoadPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIRoadPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string arg1 ;
  double arg2 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIRoadPosition const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1edgeID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->edgeID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1edgeID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->edgeID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->pos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->pos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1laneIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->laneIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1laneIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->laneIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIRoadPosition::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIRoadPosition > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIRoadPosition >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIRoadPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIColor_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIColor_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  libsumo::TraCIColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIColor_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  libsumo::TraCIColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIColor const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->r);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->g);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->b);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->a);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIColor > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIColor::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIColor > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIColor >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIColor(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIColor > **)&jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPositionVector_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIPositionVector const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPositionVector_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::vector< libsumo::TraCIPosition > *arg2 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< libsumo::TraCIPosition > **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPositionVector_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIPosition > *)& ((arg1)->value);
  *(std::vector< libsumo::TraCIPosition > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPositionVector_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIPositionVector > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIPositionVector::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIPositionVector > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIPositionVector >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPositionVector(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPositionVector *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIPositionVector *)new libsumo::TraCIPositionVector();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPositionVector >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPositionVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIInt_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIInt *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIInt > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIInt >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIInt_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  libsumo::TraCIInt *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIInt > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIInt >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIInt > **)&jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIInt const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIInt > **)&jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIInt > **)&jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->value);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIInt > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIInt::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIInt > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIInt >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIInt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIInt > **)&jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIDouble_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIDouble *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIDouble > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIDouble >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIDouble_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  libsumo::TraCIDouble *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIDouble > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIDouble >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIDouble > **)&jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIDouble const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble const > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIDouble > **)&jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIDouble const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDouble > **)&jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDouble > **)&jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->value);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIDouble > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIDouble::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIDouble > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIDouble >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIDouble(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDouble > **)&jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIString_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIString *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIString > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  libsumo::TraCIString *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIString > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIString > **)&jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIString const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString const > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIString > **)&jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIString const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIString > **)&jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIString > **)&jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->value);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIString > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIString::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIString > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIString >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIString > **)&jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIStringList > **)&jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIStringList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIStringList > **)&jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIStringList > **)&jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::string > *)& ((arg1)->value);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIStringList > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIStringList::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIStringList > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIStringList >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStringList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIStringList *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIStringList *)new libsumo::TraCIStringList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIStringList > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIStringList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStringList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIStringList > **)&jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDoubleList_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCIDoubleList > **)&jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIDoubleList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDoubleList_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::vector< double > *arg2 = (std::vector< double > *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDoubleList > **)&jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< double > **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDoubleList_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  std::vector< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDoubleList > **)&jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< double > *)& ((arg1)->value);
  *(std::vector< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDoubleList_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::shared_ptr< libsumo::TraCIResult > arg1 ;
  std::shared_ptr< libsumo::TraCIResult > *argp1 ;
  std::shared_ptr< libsumo::TraCIDoubleList > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::shared_ptr< libsumo::TraCIResult > **)&jarg1; 
  if (argp1) arg1 = *argp1; 
  {
    try {
      result = libsumo::TraCIDoubleList::cast(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIDoubleList > **)&jresult = result ? new std::shared_ptr< libsumo::TraCIDoubleList >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIDoubleList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIDoubleList *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIDoubleList *)new libsumo::TraCIDoubleList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIDoubleList > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIDoubleList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIDoubleList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIDoubleList > **)&jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_, jstring jarg6) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::vector< int > *arg5 = 0 ;
  std::string *arg6 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(std::vector< int > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return 0;
  } 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4,(std::vector< int > const &)*arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::vector< int > *arg5 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(std::vector< int > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4,(std::vector< int > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCIPhase > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPhase(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1duration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1duration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->duration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->state);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1minDur_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->minDur = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1minDur_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->minDur);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1maxDur_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->maxDur = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1maxDur_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->maxDur);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< int > **)&jarg2; 
  if (arg1) (arg1)->next = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::vector< int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< int > *)& ((arg1)->next);
  *(std::vector< int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->name = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCIPhase > **)&jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->name);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhaseVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)new std::vector< std::shared_ptr< libsumo::TraCIPhase > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhaseVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type arg1 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type)jarg1; 
  {
    try {
      result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)new std::vector< std::shared_ptr< libsumo::TraCIPhase > >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  {
    try {
      result = ((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  {
    try {
      result = ((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *arg2 = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type tempnull2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  arg2 = jarg2 ? *(std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type **)&jarg2 : &tempnull2; 
  {
    try {
      (arg1)->push_back((std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type **)&jresult = *result ? new std::shared_ptr< libsumo::TraCIPhase >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *arg3 = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? *(std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type **)&jarg3 : &tempnull3; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__set(arg1,arg2,(std::shared_ptr< libsumo::TraCIPhase > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPhaseVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogic_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILogic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogic_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg4 = 0 ;
  libsumo::TraCILogic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic((std::string const &)*arg1,arg2,arg3,(std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILogic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogic_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  libsumo::TraCILogic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILogic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILogic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1programID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->programID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1programID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::string *) & ((arg1)->programID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1currentPhaseIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->currentPhaseIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1currentPhaseIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (int) ((arg1)->currentPhaseIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1phases_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jarg2; 
  if (arg1) (arg1)->phases = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1phases_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)& ((arg1)->phases);
  *(std::vector< std::shared_ptr< libsumo::TraCIPhase > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1subParameter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::map< std::string,std::string > *arg2 = (std::map< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = *(std::map< std::string,std::string > **)&jarg2; 
  if (arg1) (arg1)->subParameter = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1subParameter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::map< std::string,std::string > *)& ((arg1)->subParameter);
  *(std::map< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILink_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCILink *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCILink *)new libsumo::TraCILink();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILink **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILink_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCILink *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (libsumo::TraCILink *)new libsumo::TraCILink((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILink **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILink(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1fromLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->fromLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1fromLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->fromLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1viaLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->viaLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1viaLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->viaLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1toLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->toLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1toLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->toLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnection_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIConnection *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIConnection **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnection_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2, jboolean jarg3, jboolean jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  std::string arg7 ;
  double arg8 ;
  libsumo::TraCIConnection *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  arg4 = jarg4 ? true : false; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  (&arg5)->assign(arg5_pstr);
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  (&arg6)->assign(arg6_pstr);
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  (&arg7)->assign(arg7_pstr);
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIConnection **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIConnection(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->approachedLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->approachedLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasPrio_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasPrio = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasPrio_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->hasPrio);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1isOpen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->isOpen = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1isOpen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->isOpen);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasFoe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasFoe = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasFoe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->hasFoe);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedInternal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->approachedInternal = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedInternal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->approachedInternal);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->state);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1direction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->direction = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1direction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->direction);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (std::string *) & ((arg1)->id);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1entryTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->entryTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1entryTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->entryTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1leaveTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->leaveTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1leaveTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->leaveTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1typeID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->typeID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1typeID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (std::string *) & ((arg1)->typeID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIVehicleData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIVehicleData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIVehicleData *)new libsumo::TraCIVehicleData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIVehicleData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIVehicleData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (std::string *) & ((arg1)->id);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1tlIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tlIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1tlIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (int) ((arg1)->tlIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1dist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->dist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1dist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (double) ((arg1)->dist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT jchar JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (char) ((arg1)->state);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextTLSData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCINextTLSData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCINextTLSData *)new libsumo::TraCINextTLSData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCINextTLSData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextTLSData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jstring jarg14, jstring jarg15, jdouble jarg16) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  std::string *arg15 = 0 ;
  double arg16 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  if(!jarg14) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg14_pstr = (const char *)jenv->GetStringUTFChars(jarg14, 0); 
  if (!arg14_pstr) return 0;
  std::string arg14_str(arg14_pstr);
  arg14 = &arg14_str;
  jenv->ReleaseStringUTFChars(jarg14, arg14_pstr); 
  if(!jarg15) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg15_pstr = (const char *)jenv->GetStringUTFChars(jarg15, 0); 
  if (!arg15_pstr) return 0;
  std::string arg15_str(arg15_pstr);
  arg15 = &arg15_str;
  jenv->ReleaseStringUTFChars(jarg15, arg15_pstr); 
  arg16 = (double)jarg16; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14,(std::string const &)*arg15,arg16);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jstring jarg14, jstring jarg15) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  std::string *arg15 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  if(!jarg14) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg14_pstr = (const char *)jenv->GetStringUTFChars(jarg14, 0); 
  if (!arg14_pstr) return 0;
  std::string arg14_str(arg14_pstr);
  arg14 = &arg14_str;
  jenv->ReleaseStringUTFChars(jarg14, arg14_pstr); 
  if(!jarg15) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg15_pstr = (const char *)jenv->GetStringUTFChars(jarg15, 0); 
  if (!arg15_pstr) return 0;
  std::string arg15_str(arg15_pstr);
  arg15 = &arg15_str;
  jenv->ReleaseStringUTFChars(jarg15, arg15_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14,(std::string const &)*arg15);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jstring jarg14) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  if(!jarg14) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg14_pstr = (const char *)jenv->GetStringUTFChars(jarg14, 0); 
  if (!arg14_pstr) return 0;
  std::string arg14_str(arg14_pstr);
  arg14 = &arg14_str;
  jenv->ReleaseStringUTFChars(jarg14, arg14_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5, jdouble jarg6) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4, jint jarg5) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = (int)jarg5; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_113(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_114(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_115(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData_1_1SWIG_116(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextStopData const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1lane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->lane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1lane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->lane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1startPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->startPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1startPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->startPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1endPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->endPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1endPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->endPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stoppingPlaceID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->stoppingPlaceID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stoppingPlaceID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->stoppingPlaceID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stopFlags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stopFlags = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stopFlags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->stopFlags);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1duration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1duration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->duration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1until_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->until = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1until_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->until);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1intendedArrival_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->intendedArrival = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1intendedArrival_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->intendedArrival);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1arrival_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrival = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1arrival_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->arrival);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1depart_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1depart_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->depart);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1split_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->split = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1split_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->split);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1join_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->join = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1join_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->join);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1actType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->actType = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1actType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->actType);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1tripId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->tripId = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1tripId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->tripId);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1line_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->line = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1line_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->line);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1speed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->speed = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1speed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->speed);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextStopData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopData > **)&jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopDataVector *arg1 = (libsumo::TraCINextStopDataVector *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVector const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const libsumo::TraCINextStopDataVector > **)&jarg1;
  arg1 = (libsumo::TraCINextStopDataVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextStopDataVector const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCINextStopDataVector *arg1 = (libsumo::TraCINextStopDataVector *) 0 ;
  std::vector< libsumo::TraCINextStopData > *arg2 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVector > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopDataVector > **)&jarg1;
  arg1 = (libsumo::TraCINextStopDataVector *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< libsumo::TraCINextStopData > **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCINextStopDataVector *arg1 = (libsumo::TraCINextStopDataVector *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVector > *smartarg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopDataVector > **)&jarg1;
  arg1 = (libsumo::TraCINextStopDataVector *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCINextStopData > *)& ((arg1)->value);
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopDataVector(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCINextStopDataVector *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCINextStopDataVector *)new libsumo::TraCINextStopDataVector();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  *(std::shared_ptr<  libsumo::TraCINextStopDataVector > **)&jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopDataVector >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextStopDataVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCINextStopDataVector *arg1 = (libsumo::TraCINextStopDataVector *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVector > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  libsumo::TraCINextStopDataVector > **)&jarg1;
  arg1 = (libsumo::TraCINextStopDataVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1laneID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->laneID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1laneID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (std::string *) & ((arg1)->laneID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1occupation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->occupation = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1occupation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (double) ((arg1)->occupation);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1bestLaneOffset_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bestLaneOffset = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1bestLaneOffset_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (int) ((arg1)->bestLaneOffset);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1allowsContinuation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->allowsContinuation = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1allowsContinuation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (bool) ((arg1)->allowsContinuation);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1continuationLanes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->continuationLanes = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1continuationLanes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->continuationLanes);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIBestLanesData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIBestLanesData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIBestLanesData *)new libsumo::TraCIBestLanesData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIBestLanesData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIBestLanesData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8, jstring jarg9, jdouble jarg10, jdouble jarg11, jdouble jarg12, jstring jarg13) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  double arg12 ;
  std::string *arg13 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return 0;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  arg12 = (double)jarg12; 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11,arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8, jstring jarg9, jdouble jarg10, jdouble jarg11, jdouble jarg12) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  double arg12 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return 0;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  arg12 = (double)jarg12; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11,arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8, jstring jarg9, jdouble jarg10, jdouble jarg11) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return 0;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8, jstring jarg9, jdouble jarg10) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return 0;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  arg10 = (double)jarg10; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8, jstring jarg9) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return 0;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jdouble jarg6) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg6 = (double)jarg6; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::string > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_113(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1vType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->vType = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1vType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->vType);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1line_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->line = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1line_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->line);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1destStop_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->destStop = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1destStop_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->destStop);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1edges_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->edges = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1edges_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->edges);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1travelTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->travelTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1travelTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->travelTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1cost_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->cost = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1cost_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->cost);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1intended_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->intended = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1intended_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->intended);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1depart_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1depart_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->depart);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1departPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->departPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1departPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->departPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1arrivalPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrivalPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1arrivalPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->arrivalPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->description);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIReservation_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIReservation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIReservation *)new libsumo::TraCIReservation();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIReservation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIReservation_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jstring jarg3, jstring jarg4, jstring jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jint jarg10) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  libsumo::TraCIReservation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      result = (libsumo::TraCIReservation *)new libsumo::TraCIReservation((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIReservation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (std::string *) & ((arg1)->id);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1persons_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->persons = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1persons_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->persons);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->group = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (std::string *) & ((arg1)->group);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1fromEdge_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->fromEdge = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1fromEdge_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (std::string *) & ((arg1)->fromEdge);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1toEdge_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->toEdge = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1toEdge_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (std::string *) & ((arg1)->toEdge);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1departPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->departPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1departPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (double) ((arg1)->departPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1arrivalPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrivalPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1arrivalPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (double) ((arg1)->arrivalPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1depart_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1depart_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (double) ((arg1)->depart);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1reservationTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->reservationTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1reservationTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (double) ((arg1)->reservationTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservation_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  result = (int) ((arg1)->state);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIReservation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIReservation **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1collider_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->collider = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1collider_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->collider);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victim_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->victim = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victim_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->victim);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1colliderType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->colliderType = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1colliderType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->colliderType);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victimType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->victimType = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victimType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->victimType);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1colliderSpeed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->colliderSpeed = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1colliderSpeed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (double) ((arg1)->colliderSpeed);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victimSpeed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->victimSpeed = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1victimSpeed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (double) ((arg1)->victimSpeed);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->type = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->type);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1lane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->lane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1lane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (std::string *) & ((arg1)->lane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->pos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollision_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  result = (double) ((arg1)->pos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCICollision(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCICollision *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCICollision *)new libsumo::TraCICollision();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCICollision **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCICollision(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCICollision **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1signalId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->signalId = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1signalId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (std::string *) & ((arg1)->signalId);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1tripId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->tripId = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1tripId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (std::string *) & ((arg1)->tripId);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1foeId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->foeId = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1foeId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (std::string *) & ((arg1)->foeId);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1foeSignal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->foeSignal = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1foeSignal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (std::string *) & ((arg1)->foeSignal);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1limit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->limit = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1limit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (int) ((arg1)->limit);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1mustWait_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->mustWait = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1mustWait_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (bool) ((arg1)->mustWait);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1active_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->active = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1active_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (bool) ((arg1)->active);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1param_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::map< std::string,std::string > *arg2 = (std::map< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  arg2 = *(std::map< std::string,std::string > **)&jarg2; 
  if (arg1) (arg1)->param = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1param_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  result = (std::map< std::string,std::string > *)& ((arg1)->param);
  *(std::map< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraint_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  {
    try {
      result = ((libsumo::TraCISignalConstraint const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCISignalConstraint(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCISignalConstraint *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCISignalConstraint *)new libsumo::TraCISignalConstraint();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCISignalConstraint **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCISignalConstraint(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCISignalConstraint **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->foeId = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (std::string *) & ((arg1)->foeId);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoDist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->egoDist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoDist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (double) ((arg1)->egoDist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeDist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->foeDist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeDist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (double) ((arg1)->foeDist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoExitDist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->egoExitDist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoExitDist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (double) ((arg1)->egoExitDist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeExitDist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->foeExitDist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeExitDist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (double) ((arg1)->foeExitDist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->egoLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (std::string *) & ((arg1)->egoLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->foeLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (std::string *) & ((arg1)->foeLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoResponse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->egoResponse = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1egoResponse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (bool) ((arg1)->egoResponse);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeResponse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->foeResponse = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoe_1foeResponse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  result = (bool) ((arg1)->foeResponse);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIJunctionFoe(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIJunctionFoe *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIJunctionFoe *)new libsumo::TraCIJunctionFoe();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIJunctionFoe **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIJunctionFoe(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIJunctionFoe **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogicVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogicVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic >::size_type arg1 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCILogic >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCILogic >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCILogic > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCILogic >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILogic >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCILogic >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic >::value_type *) &std_vector_Sl_libsumo_TraCILogic_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCILogic >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILogic >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__set(arg1,arg2,(libsumo::TraCILogic const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILogicVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStageVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStageVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage >::size_type arg1 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIStage >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIStage >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIStage > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIStage >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIStage >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIStage >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage >::value_type *) &std_vector_Sl_libsumo_TraCIStage_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIStage >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIStage >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__set(arg1,arg2,(libsumo::TraCIStage const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStageVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopDataVector2_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCINextStopData > *)new std::vector< libsumo::TraCINextStopData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopDataVector2_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type arg1 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCINextStopData >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCINextStopData > *)new std::vector< libsumo::TraCINextStopData >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextStopData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextStopData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCINextStopData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCINextStopData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  
  arg2 = (std::vector< libsumo::TraCINextStopData >::value_type *)((*(std::shared_ptr< const libsumo::TraCINextStopData > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCINextStopData > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCINextStopData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCINextStopData >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextStopData >::value_type *) &std_vector_Sl_libsumo_TraCINextStopData_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< const libsumo::TraCINextStopData > **)&jresult = new std::shared_ptr< const libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (std::vector< libsumo::TraCINextStopData >::value_type *)((*(std::shared_ptr< const libsumo::TraCINextStopData > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCINextStopData > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCINextStopData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__set(arg1,arg2,(libsumo::TraCINextStopData const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextStopDataVector2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCINextStopData > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIReservationVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIReservation > *)new std::vector< libsumo::TraCIReservation >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIReservation > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIReservationVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation >::size_type arg1 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIReservation >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIReservation > *)new std::vector< libsumo::TraCIReservation >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIReservation > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIReservation > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIReservation > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIReservation >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIReservation > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIReservation >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIReservation >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIReservation >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIReservation >::value_type *) &std_vector_Sl_libsumo_TraCIReservation_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIReservation >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIReservationVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIReservation >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIReservation >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__set(arg1,arg2,(libsumo::TraCIReservation const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIReservationVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIReservation > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCISignalConstraintVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCISignalConstraint > *)new std::vector< libsumo::TraCISignalConstraint >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCISignalConstraintVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type arg1 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCISignalConstraint >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCISignalConstraint > *)new std::vector< libsumo::TraCISignalConstraint >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCISignalConstraint >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCISignalConstraint >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCISignalConstraint >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCISignalConstraint >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCISignalConstraint >::value_type *) &std_vector_Sl_libsumo_TraCISignalConstraint_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCISignalConstraintVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCISignalConstraint >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCISignalConstraint >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__set(arg1,arg2,(libsumo::TraCISignalConstraint const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCISignalConstraintVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCISignalConstraint > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCICollisionVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCICollision > *)new std::vector< libsumo::TraCICollision >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCICollision > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCICollisionVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision >::size_type arg1 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCICollision >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCICollision > *)new std::vector< libsumo::TraCICollision >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCICollision > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCICollision > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCICollision > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCICollision >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCICollision > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCICollision >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCICollision >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCICollision >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCICollision >::value_type *) &std_vector_Sl_libsumo_TraCICollision_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCICollision >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCICollisionVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCICollision >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCICollision >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__set(arg1,arg2,(libsumo::TraCICollision const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCICollisionVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCICollision > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIJunctionFoeVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIJunctionFoe > *)new std::vector< libsumo::TraCIJunctionFoe >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIJunctionFoe > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIJunctionFoeVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type arg1 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIJunctionFoe >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIJunctionFoe > *)new std::vector< libsumo::TraCIJunctionFoe >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIJunctionFoe > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIJunctionFoe >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIJunctionFoe >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIJunctionFoe >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIJunctionFoe >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIJunctionFoe >::value_type *) &std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIJunctionFoe >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIJunctionFoeVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIJunctionFoe >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIJunctionFoe >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__set(arg1,arg2,(libsumo::TraCIJunctionFoe const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIJunctionFoeVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIJunctionFoe > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIBestLanesVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIBestLanesData > *)new std::vector< libsumo::TraCIBestLanesData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIBestLanesData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIBestLanesVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type arg1 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIBestLanesData >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIBestLanesData > *)new std::vector< libsumo::TraCIBestLanesData >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIBestLanesData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIBestLanesData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIBestLanesData >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIBestLanesData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIBestLanesData >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIBestLanesData >::value_type *) &std_vector_Sl_libsumo_TraCIBestLanesData_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIBestLanesData >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIBestLanesData >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIBestLanesData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__set(arg1,arg2,(libsumo::TraCIBestLanesData const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIBestLanesVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIBestLanesData > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnectionVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnectionVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection >::size_type arg1 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIConnection >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIConnection >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIConnection > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIConnection >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIConnection >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIConnection >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection >::value_type *) &std_vector_Sl_libsumo_TraCIConnection_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIConnection >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIConnection >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__set(arg1,arg2,(libsumo::TraCIConnection const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIConnectionVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILinkVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCILink > *)new std::vector< libsumo::TraCILink >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILink > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILinkVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILink >::size_type arg1 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCILink >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCILink > *)new std::vector< libsumo::TraCILink >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILink > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILink > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILink > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCILink >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCILink > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCILink >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILink >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCILink >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILink >::value_type *) &std_vector_Sl_libsumo_TraCILink_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILink >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCILink >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILink >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__set(arg1,arg2,(libsumo::TraCILink const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILinkVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCILink > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILinkVectorVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< std::vector< libsumo::TraCILink > > *)new std::vector< std::vector< libsumo::TraCILink > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::vector< libsumo::TraCILink > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILinkVectorVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type arg1 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::vector< libsumo::TraCILink > >::size_type)jarg1; 
  {
    try {
      result = (std::vector< std::vector< libsumo::TraCILink > > *)new std::vector< std::vector< libsumo::TraCILink > >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::vector< libsumo::TraCILink > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  {
    try {
      result = ((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  {
    try {
      result = ((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  arg2 = (std::vector< std::vector< libsumo::TraCILink > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  arg2 = *(std::vector< std::vector< libsumo::TraCILink > >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::vector< libsumo::TraCILink > >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< std::vector< libsumo::TraCILink > >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::vector< libsumo::TraCILink > >::value_type *) &std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::vector< libsumo::TraCILink > >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILinkVectorVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< std::vector< libsumo::TraCILink > >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::vector< libsumo::TraCILink > >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__set(arg1,arg2,(std::vector< libsumo::TraCILink > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILinkVectorVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::vector< libsumo::TraCILink > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextTLSVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCINextTLSData > *)new std::vector< libsumo::TraCINextTLSData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextTLSData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextTLSVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type arg1 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCINextTLSData >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCINextTLSData > *)new std::vector< libsumo::TraCINextTLSData >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextTLSData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextTLSData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextTLSData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCINextTLSData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCINextTLSData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCINextTLSData >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCINextTLSData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCINextTLSData >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextTLSData >::value_type *) &std_vector_Sl_libsumo_TraCINextTLSData_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextTLSData >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCINextTLSData >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCINextTLSData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__set(arg1,arg2,(libsumo::TraCINextTLSData const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextTLSVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCINextTLSData > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCPositionVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIPosition > *)new std::vector< libsumo::TraCIPosition >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIPosition > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCPositionVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPosition >::size_type arg1 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIPosition >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIPosition > *)new std::vector< libsumo::TraCIPosition >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIPosition > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPosition > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPosition > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIPosition >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIPosition > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  
  arg2 = (std::vector< libsumo::TraCIPosition >::value_type *)((*(std::shared_ptr< const libsumo::TraCIPosition > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPosition > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIPosition >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIPosition >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPosition >::value_type *) &std_vector_Sl_libsumo_TraCIPosition_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< const libsumo::TraCIPosition > **)&jresult = new std::shared_ptr< const libsumo::TraCIPosition >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCPositionVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (std::vector< libsumo::TraCIPosition >::value_type *)((*(std::shared_ptr< const libsumo::TraCIPosition > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIPosition > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIPosition >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__set(arg1,arg2,(libsumo::TraCIPosition const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCPositionVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIPosition > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIVehicleDataVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIVehicleData > *)new std::vector< libsumo::TraCIVehicleData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIVehicleData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIVehicleDataVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type arg1 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIVehicleData >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIVehicleData > *)new std::vector< libsumo::TraCIVehicleData >(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIVehicleData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIVehicleData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIVehicleData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIVehicleData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIVehicleData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIVehicleData >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIVehicleData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIVehicleData >::value_type const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIVehicleData >::value_type *) &std_vector_Sl_libsumo_TraCIVehicleData_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIVehicleData >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleDataVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIVehicleData >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIVehicleData >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__set(arg1,arg2,(libsumo::TraCIVehicleData const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIVehicleDataVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIVehicleData > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIResults_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)new std::map< int,std::shared_ptr< libsumo::TraCIResult > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIResults_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< int,std::shared_ptr< libsumo::TraCIResult > > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)new std::map< int,std::shared_ptr< libsumo::TraCIResult > >((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  {
    try {
      result = (unsigned int)((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  {
    try {
      result = (bool)((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  std::shared_ptr< libsumo::TraCIResult > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      try {
        result = (std::shared_ptr< libsumo::TraCIResult > *) &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__get(arg1,(int const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::TraCIResult > **)&jresult = *result ? new std::shared_ptr< libsumo::TraCIResult >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  int *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIResult > *arg3 = 0 ;
  int temp2 ;
  std::shared_ptr< libsumo::TraCIResult > tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  arg3 = jarg3 ? *(std::shared_ptr< libsumo::TraCIResult > **)&jarg3 : &tempnull3; 
  {
    try {
      std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__set(arg1,(int const &)*arg2,(std::shared_ptr< libsumo::TraCIResult > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1del(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      try {
        std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__del(arg1,(int const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResults_1has_1key(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__has_key(arg1,(int const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIResults(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1SubscriptionResults_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)new std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1SubscriptionResults_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)new std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  {
    try {
      result = (unsigned int)((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  {
    try {
      result = (bool)((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::string *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      try {
        result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__get(arg1,(std::string const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::string *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::map< int,std::shared_ptr< libsumo::TraCIResult > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< int,std::shared_ptr< libsumo::TraCIResult > > const & reference is null");
    return ;
  } 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__set(arg1,(std::string const &)*arg2,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1del(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      try {
        std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__del(arg1,(std::string const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SubscriptionResults_1has_1key(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__has_key(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1SubscriptionResults(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1ContextSubscriptionResults_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)new std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1ContextSubscriptionResults_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)new std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  {
    try {
      result = (unsigned int)((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  {
    try {
      result = (bool)((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::string *arg2 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      try {
        result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__get(arg1,(std::string const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::string *arg2 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const & reference is null");
    return ;
  } 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__set(arg1,(std::string const &)*arg2,(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1del(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      try {
        std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__del(arg1,(std::string const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ContextSubscriptionResults_1has_1key(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__has_key(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1ContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAdaptedTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getAdaptedTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getEffort(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getEffort((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepPersonIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getLastStepPersonIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getMeanFriction(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getMeanFriction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLaneNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLaneNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getStreetName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getStreetName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getPendingVehicles(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getPendingVehicles((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Edge::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Edge::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Edge::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Edge::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Edge::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Edge::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setAllowed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Edge::setAllowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setAllowed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setAllowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setDisallowed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Edge::setDisallowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setDisallowed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setDisallowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setFriction(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setFriction((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Edge(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Edge *arg1 = (libsumo::Edge *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Edge **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEFAULT_1VIEW_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("View #0");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getZoom_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::GUI::getZoom((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getZoom_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::GUI::getZoom();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getAngle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::GUI::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getAngle_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::GUI::getAngle();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getOffset_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getOffset((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getOffset_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getOffset();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getSchema_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getSchema((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getSchema_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getSchema();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getBoundary_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getBoundary((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getBoundary_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getBoundary();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1hasView_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::GUI::hasView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1hasView_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jboolean jresult = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (bool)libsumo::GUI::hasView();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getTrackedVehicle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getTrackedVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getTrackedVehicle_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getTrackedVehicle();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1isSelected_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (bool)libsumo::GUI::isSelected((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1isSelected_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::GUI::isSelected((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setZoom(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::GUI::setZoom((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setAngle(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::GUI::setAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setOffset(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::setOffset((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setSchema(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::setSchema((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setBoundary(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::GUI::setBoundary((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1trackVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::trackVehicle((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1screenshot_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1screenshot_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1screenshot_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1track_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::track((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1track_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::track((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1toggleSelection_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::toggleSelection((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1toggleSelection_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::toggleSelection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1addView_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1addView_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1addView_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1removeView(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::removeView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::GUI::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::GUI::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::GUI::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::GUI::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::GUI::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::GUI::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::GUI::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GUI_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::GUI::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1GUI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::GUI *arg1 = (libsumo::GUI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::GUI **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getPosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::InductionLoop::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepMeanLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getTimeSinceDetection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getTimeSinceDetection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getVehicleData(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIVehicleData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getVehicleData((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIVehicleData > **)&jresult = new std::vector< libsumo::TraCIVehicleData >((const std::vector< libsumo::TraCIVehicleData > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIntervalOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIntervalMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIntervalVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::InductionLoop::getIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIntervalVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getIntervalVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastIntervalOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastIntervalMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastIntervalVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::InductionLoop::getLastIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastIntervalVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getLastIntervalVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1overrideTimeSinceDetection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::InductionLoop::overrideTimeSinceDetection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::InductionLoop::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::InductionLoop::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::InductionLoop::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::InductionLoop::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1InductionLoop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::InductionLoop *arg1 = (libsumo::InductionLoop *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::InductionLoop **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Junction::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Junction::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Junction::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Junction::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Junction::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Junction::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Junction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Junction *arg1 = (libsumo::Junction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Junction **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getJamLengthVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getJamLengthVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getJamLengthMeters(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getJamLengthMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getPosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLaneIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getLaneIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getVehicleDistToDetectorEnd(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getVehicleDistToDetectorEnd((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIntervalOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIntervalMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIntervalMaxJamLengthInMeters(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalMaxJamLengthInMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIntervalVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastIntervalOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastIntervalMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastIntervalMaxJamLengthInMeters(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalMaxJamLengthInMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastIntervalVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getLastIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1overrideVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::LaneArea::overrideVehicleNumber((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::LaneArea::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::LaneArea::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::LaneArea::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::LaneArea::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::LaneArea::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LaneArea::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1LaneArea(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::LaneArea *arg1 = (libsumo::LaneArea *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::LaneArea **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLinkNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLinkNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getEdgeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getFriction(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getFriction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllowed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getAllowed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getDisallowed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getDisallowed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getChangePermissions(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Lane::getChangePermissions((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLinks(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIConnection > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = new std::vector< libsumo::TraCIConnection >((const std::vector< libsumo::TraCIConnection > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getFoes(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Lane::getFoes((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getInternalFoes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getInternalFoes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getPendingVehicles(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getPendingVehicles((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Lane::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Lane::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Lane::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Lane::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Lane::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Lane::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setAllowed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Lane::setAllowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setAllowed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setAllowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setDisallowed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Lane::setDisallowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setDisallowed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setDisallowed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setChangePermissions(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  int arg3 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      libsumo::Lane::setChangePermissions((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setFriction(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setFriction((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Lane(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Lane *arg1 = (libsumo::Lane *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Lane **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getEntryLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getEntryLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getExitLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getExitLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getEntryPositions(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getEntryPositions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< double > **)&jresult = new std::vector< double >((const std::vector< double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getExitPositions(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getExitPositions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< double > **)&jresult = new std::vector< double >((const std::vector< double > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastIntervalMeanTravelTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanTravelTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastIntervalMeanHaltsPerVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanHaltsPerVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastIntervalMeanTimeLoss(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastIntervalVehicleSum(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastIntervalVehicleSum((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::MultiEntryExit::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::MultiEntryExit::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::MultiEntryExit::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MultiEntryExit::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1MultiEntryExit(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::MultiEntryExit *arg1 = (libsumo::MultiEntryExit *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::MultiEntryExit **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getType((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor((libsumo::TraCIColor &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::POI::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::POI::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getAngle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::POI::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getImageFile(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getImageFile((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::POI::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::POI::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::POI::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::POI::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::POI::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POI::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::POI::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setPosition(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::setPosition((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setAngle(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setImageFile(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::POI::setImageFile((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6, jstring jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6, jstring jarg7, jdouble jarg8, jdouble jarg9) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  double arg9 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6, jstring jarg7, jdouble jarg8) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  arg8 = (double)jarg8; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6, jstring jarg7) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg4)->get() : 0);
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1highlight_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1POI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::POI *arg1 = (libsumo::POI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::POI **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getType((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor((libsumo::TraCIColor &)result)); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getFilled(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::Polygon::getFilled((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getLineWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Polygon::getLineWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Polygon::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Polygon::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Polygon::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Polygon::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Polygon::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Polygon::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::setShape((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jstring jarg5, jint jarg6, jdouble jarg7) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  double arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jstring jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jstring jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIPositionVector *)((*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIPositionVector > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5, jboolean jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  bool arg5 ;
  bool arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< double > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  arg4 = *(std::vector< double > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  bool arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< double > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  arg4 = *(std::vector< double > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  arg5 = jarg5 ? true : false; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< double > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  arg4 = *(std::vector< double > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3, jobject jarg3_) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< double > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1addDynamics_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setFilled(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  std::string arg1 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Polygon::setFilled(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setLineWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Polygon::setLineWidth(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Polygon(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Polygon *arg1 = (libsumo::Polygon *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Polygon **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getEdges(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Route::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Route::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Route::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Route::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Route::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Route::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1add(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::add((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Route(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Route *arg1 = (libsumo::Route *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Route **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jstring jarg4, jboolean jarg5, jstring jarg6, jboolean jarg7, jlong jarg8) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  void *arg8 = (void *) 0 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = jarg5 ? true : false; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  arg7 = jarg7 ? true : false; 
  arg8 = *(void **)&jarg8; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jstring jarg4, jboolean jarg5, jstring jarg6, jboolean jarg7) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = jarg5 ? true : false; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  arg7 = jarg7 ? true : false; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jstring jarg4, jboolean jarg5, jstring jarg6) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = jarg5 ? true : false; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jstring jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1start_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = 0 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::load((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1hasGUI(JNIEnv *jenv, jclass jcls) {
  jboolean jresult = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (bool)libsumo::Simulation::hasGUI();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1isLoaded(JNIEnv *jenv, jclass jcls) {
  jboolean jresult = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (bool)libsumo::Simulation::isLoaded();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1step_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Simulation::step(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1step_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::step();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1executeMove(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::executeMove();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1close_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::close((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1close_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::close();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getVersion(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< int,std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getVersion();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,std::string > **)&jresult = new std::pair< int,std::string >((const std::pair< int,std::string > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getOption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getOption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCurrentTime(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getCurrentTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getTime(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEndTime(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getEndTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getLoadedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getLoadedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getLoadedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getLoadedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getDepartedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getDepartedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getArrivedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getArrivedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingStartingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getParkingStartingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingStartingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getParkingStartingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingEndingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getParkingEndingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingEndingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getParkingEndingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopStartingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStopStartingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopStartingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStopStartingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopEndingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStopEndingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopEndingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStopEndingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCollidingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getCollidingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCollidingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getCollidingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEmergencyStoppingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getEmergencyStoppingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEmergencyStoppingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getEmergencyStoppingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStartingTeleportNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStartingTeleportNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStartingTeleportIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStartingTeleportIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEndingTeleportNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getEndingTeleportNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEndingTeleportIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getEndingTeleportIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedPersonNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getDepartedPersonNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedPersonIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getDepartedPersonIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedPersonNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getArrivedPersonNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedPersonIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getArrivedPersonIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getBusStopIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getBusStopIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getBusStopWaiting(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Simulation::getBusStopWaiting((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getBusStopWaitingIDList(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getBusStopWaitingIDList((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getPendingVehicles(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getPendingVehicles();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCollisions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCICollision > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getCollisions();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCICollision > **)&jresult = new std::vector< libsumo::TraCICollision >((const std::vector< libsumo::TraCICollision > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getScale(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getScale();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDeltaT(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getDeltaT();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getNetBoundary(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPositionVector result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getNetBoundary();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPositionVector > **)&jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector((libsumo::TraCIPositionVector &)result)); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getMinExpectedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getMinExpectedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertRoad_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  std::string *arg4 = 0 ;
  libsumo::TraCIRoadPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition((libsumo::TraCIRoadPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertRoad_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIRoadPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition((libsumo::TraCIRoadPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertRoad_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIRoadPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIRoadPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition((libsumo::TraCIRoadPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertGeo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertGeo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jboolean jarg5, jboolean jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  bool arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jboolean jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistanceRoad_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jdouble jarg4, jboolean jarg5) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistanceRoad_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Simulation::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1setScale(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Simulation::setScale(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1clearPending_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::clearPending((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1clearPending_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::clearPending();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1saveState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::saveState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1loadState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Simulation::loadState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1writeMessage(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::writeMessage((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIResults *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(libsumo::TraCIResults **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2,arg3,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< int > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::subscribe();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getSubscriptionResults_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getSubscriptionResults_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Simulation::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Simulation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Simulation *arg1 = (libsumo::Simulation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Simulation **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TRACI_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TRACI_VERSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GETVERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GETVERSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1LOAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_LOAD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1EXECUTEMOVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_EXECUTEMOVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SIMSTEP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SIMSTEP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SETORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SETORDER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1REROUTE_1TO_1PARKING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_REROUTE_TO_PARKING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1RESUME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_RESUME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1CHANGELANE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_CHANGELANE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SLOWDOWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SLOWDOWN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1CHANGESUBLANE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_CHANGESUBLANE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1OPENGAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_OPENGAP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1REPLACE_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_REPLACE_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1INSERT_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_INSERT_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TAXI_1FLEET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TAXI_FLEET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1TAXI_1DISPATCH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_TAXI_DISPATCH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1CHANGETARGET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_CHANGETARGET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1ADD_1SUBSCRIPTION_1FILTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_ADD_SUBSCRIPTION_FILTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1INDUCTIONLOOP_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_INDUCTIONLOOP_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1INDUCTIONLOOP_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_INDUCTIONLOOP_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1INDUCTIONLOOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_INDUCTIONLOOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1INDUCTIONLOOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_INDUCTIONLOOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1INDUCTIONLOOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_INDUCTIONLOOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1INDUCTIONLOOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_INDUCTIONLOOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1INDUCTIONLOOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_INDUCTIONLOOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1MULTIENTRYEXIT_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1MULTIENTRYEXIT_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1MULTIENTRYEXIT_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_MULTIENTRYEXIT_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1MULTIENTRYEXIT_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_MULTIENTRYEXIT_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1MULTIENTRYEXIT_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_MULTIENTRYEXIT_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1MULTIENTRYEXIT_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1MULTIENTRYEXIT_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1TL_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_TL_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1TL_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_TL_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1TL_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_TL_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1TL_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_TL_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1TL_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_TL_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1TL_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_TL_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1TL_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_TL_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1LANE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1LANE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1LANE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_LANE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1LANE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_LANE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1LANE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_LANE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1LANE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1LANE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VEHICLE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VEHICLE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1VEHICLE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_VEHICLE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1VEHICLE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_VEHICLE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1VEHICLE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_VEHICLE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VEHICLE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VEHICLE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VEHICLETYPE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLETYPE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VEHICLETYPE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLETYPE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1VEHICLETYPE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_VEHICLETYPE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1VEHICLETYPE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_VEHICLETYPE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1VEHICLETYPE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_VEHICLETYPE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VEHICLETYPE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLETYPE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VEHICLETYPE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLETYPE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1ROUTE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1ROUTE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1ROUTE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_ROUTE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1ROUTE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_ROUTE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1ROUTE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_ROUTE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1ROUTE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1ROUTE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1POI_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POI_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1POI_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POI_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1POI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_POI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1POI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_POI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1POI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_POI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1POI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1POI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1POLYGON_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POLYGON_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1POLYGON_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POLYGON_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1POLYGON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_POLYGON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1POLYGON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_POLYGON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1POLYGON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_POLYGON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1POLYGON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POLYGON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1POLYGON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POLYGON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1JUNCTION_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_JUNCTION_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1JUNCTION_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_JUNCTION_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1JUNCTION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_JUNCTION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1JUNCTION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_JUNCTION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1JUNCTION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_JUNCTION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1JUNCTION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_JUNCTION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1JUNCTION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_JUNCTION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1EDGE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_EDGE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1EDGE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_EDGE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1EDGE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_EDGE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1EDGE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_EDGE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1EDGE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_EDGE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1EDGE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_EDGE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1EDGE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_EDGE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1SIM_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_SIM_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1SIM_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_SIM_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1SIM_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_SIM_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1SIM_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_SIM_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1SIM_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_SIM_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1SIM_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_SIM_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1SIM_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_SIM_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1GUI_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_GUI_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1GUI_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_GUI_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1GUI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_GUI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1GUI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_GUI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1GUI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_GUI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1GUI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_GUI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1GUI_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_GUI_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1LANEAREA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANEAREA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1LANEAREA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANEAREA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1LANEAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_LANEAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1LANEAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_LANEAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1LANEAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_LANEAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1LANEAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANEAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1LANEAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANEAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1PERSON_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PERSON_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1PERSON_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PERSON_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1PERSON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_PERSON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1PERSON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_PERSON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1PERSON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_PERSON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1PERSON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PERSON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1PERSON_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PERSON_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1BUSSTOP_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_BUSSTOP_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1BUSSTOP_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_BUSSTOP_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1BUSSTOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_BUSSTOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1BUSSTOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_BUSSTOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1BUSSTOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_BUSSTOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1BUSSTOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_BUSSTOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1BUSSTOP_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_BUSSTOP_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1PARKINGAREA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PARKINGAREA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1PARKINGAREA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PARKINGAREA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1PARKINGAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_PARKINGAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1PARKINGAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_PARKINGAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1PARKINGAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_PARKINGAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1PARKINGAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PARKINGAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1PARKINGAREA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PARKINGAREA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1CHARGINGSTATION_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CHARGINGSTATION_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1CHARGINGSTATION_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CHARGINGSTATION_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1CHARGINGSTATION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_CHARGINGSTATION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1CHARGINGSTATION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_CHARGINGSTATION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1CHARGINGSTATION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_CHARGINGSTATION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1CHARGINGSTATION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CHARGINGSTATION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1CHARGINGSTATION_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CHARGINGSTATION_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1ROUTEPROBE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTEPROBE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1ROUTEPROBE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTEPROBE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1ROUTEPROBE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_ROUTEPROBE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1ROUTEPROBE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_ROUTEPROBE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1ROUTEPROBE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_ROUTEPROBE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1ROUTEPROBE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTEPROBE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1ROUTEPROBE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTEPROBE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1CALIBRATOR_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CALIBRATOR_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1CALIBRATOR_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CALIBRATOR_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1CALIBRATOR_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_CALIBRATOR_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1CALIBRATOR_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_CALIBRATOR_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1CALIBRATOR_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_CALIBRATOR_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1CALIBRATOR_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CALIBRATOR_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1CALIBRATOR_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CALIBRATOR_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1REROUTER_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_REROUTER_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1REROUTER_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_REROUTER_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1REROUTER_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_REROUTER_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1REROUTER_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_REROUTER_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1REROUTER_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_REROUTER_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1REROUTER_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_REROUTER_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1REROUTER_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_REROUTER_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VARIABLESPEEDSIGN_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VARIABLESPEEDSIGN_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1VARIABLESPEEDSIGN_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1VARIABLESPEEDSIGN_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1VARIABLESPEEDSIGN_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1VARIABLESPEEDSIGN_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1VARIABLESPEEDSIGN_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1MEANDATA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MEANDATA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1MEANDATA_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MEANDATA_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1MEANDATA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_MEANDATA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1MEANDATA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_MEANDATA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1MEANDATA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_MEANDATA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1MEANDATA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MEANDATA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1MEANDATA_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MEANDATA_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1OVERHEADWIRE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_OVERHEADWIRE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1OVERHEADWIRE_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_OVERHEADWIRE_CONTEXT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1GET_1OVERHEADWIRE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_GET_OVERHEADWIRE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1GET_1OVERHEADWIRE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_GET_OVERHEADWIRE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1OVERHEADWIRE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_OVERHEADWIRE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SUBSCRIBE_1OVERHEADWIRE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SUBSCRIBE_OVERHEADWIRE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RESPONSE_1SUBSCRIBE_1OVERHEADWIRE_1VARIABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_OVERHEADWIRE_VARIABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_1LON_1LAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_LON_LAT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_12D_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_2D;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_1LON_1LAT_1ALT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_LON_LAT_ALT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_13D_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_3D;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_1ROADMAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_ROADMAP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1POLYGON_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_POLYGON;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1UBYTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_UBYTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1BYTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_BYTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1INTEGER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_INTEGER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1DOUBLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_DOUBLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1STRING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_STRING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1STRINGLIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_STRINGLIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1COMPOUND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_COMPOUND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1DOUBLELIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_DOUBLELIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TYPE_1COLOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TYPE_COLOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RTYPE_1OK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RTYPE_OK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RTYPE_1NOTIMPLEMENTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RTYPE_NOTIMPLEMENTED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RTYPE_1ERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RTYPE_ERR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_INVALID_1DOUBLE_1VALUE_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(double)libsumo::INVALID_DOUBLE_VALUE;
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_INVALID_1INT_1VALUE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::INVALID_INT_VALUE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MAX_1ORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MAX_ORDER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEFAULT_1NUM_1RETRIES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEFAULT_NUM_RETRIES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REQUEST_1AIRDIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REQUEST_AIRDIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REQUEST_1DRIVINGDIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REQUEST_DRIVINGDIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1TELEPORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_TELEPORT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1PARKING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_PARKING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1ARRIVED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_ARRIVED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1VAPORIZED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_VAPORIZED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1TELEPORT_1ARRIVED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_TELEPORT_ARRIVED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MOVE_1AUTOMATIC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MOVE_AUTOMATIC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MOVE_1TELEPORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MOVE_TELEPORT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MOVE_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MOVE_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1WAITING_1FOR_1DEPART_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_WAITING_FOR_DEPART;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1WAITING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_WAITING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1WALKING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_WALKING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1DRIVING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_DRIVING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1ACCESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_ACCESS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1TRIP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_TRIP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STAGE_1TRANSHIP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STAGE_TRANSHIP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1DEFAULT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_DEFAULT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1PARKING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_PARKING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1TRIGGERED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_TRIGGERED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1CONTAINER_1TRIGGERED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_CONTAINER_TRIGGERED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1BUS_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_BUS_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1CONTAINER_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_CONTAINER_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1CHARGING_1STATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_CHARGING_STATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1PARKING_1AREA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_PARKING_AREA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_STOP_1OVERHEAD_1WIRE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::STOP_OVERHEAD_WIRE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1TRIGGERED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_TRIGGERED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1CONTAINER_1TRIGGERED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_CONTAINER_TRIGGERED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1NOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_NOW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1SPLIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_SPLIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1BEGIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_BEGIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1SPEED_1RANDOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_SPEED_RANDOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1SPEED_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_SPEED_MAX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1LANE_1RANDOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_LANE_RANDOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1LANE_1FREE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_LANE_FREE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1LANE_1ALLOWED_1FREE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_LANE_ALLOWED_FREE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1LANE_1BEST_1FREE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_LANE_BEST_FREE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1LANE_1FIRST_1ALLOWED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_LANE_FIRST_ALLOWED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1POS_1RANDOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_POS_RANDOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1POS_1FREE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_POS_FREE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1POS_1BASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_POS_BASE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1POS_1LAST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_POS_LAST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DEPARTFLAG_1POS_1RANDOM_1FREE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DEPARTFLAG_POS_RANDOM_FREE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ARRIVALFLAG_1LANE_1CURRENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ARRIVALFLAG_LANE_CURRENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ARRIVALFLAG_1SPEED_1CURRENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ARRIVALFLAG_SPEED_CURRENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ARRIVALFLAG_1POS_1RANDOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ARRIVALFLAG_POS_RANDOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ARRIVALFLAG_1POS_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ARRIVALFLAG_POS_MAX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ROUTING_1MODE_1DEFAULT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ROUTING_MODE_DEFAULT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ROUTING_1MODE_1AGGREGATED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ROUTING_MODE_AGGREGATED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ROUTING_1MODE_1EFFORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ROUTING_MODE_EFFORT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ROUTING_1MODE_1COMBINED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ROUTING_MODE_COMBINED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ROUTING_1MODE_1AGGREGATED_1CUSTOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ROUTING_MODE_AGGREGATED_CUSTOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TRAFFICLIGHT_1TYPE_1STATIC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_STATIC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TRAFFICLIGHT_1TYPE_1ACTUATED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_ACTUATED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TRAFFICLIGHT_1TYPE_1DELAYBASED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_DELAYBASED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANECHANGE_1LEFT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANECHANGE_LEFT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANECHANGE_1RIGHT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANECHANGE_RIGHT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1LANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_LANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1NOOPPOSITE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_NOOPPOSITE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1DOWNSTREAM_1DIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_DOWNSTREAM_DIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1UPSTREAM_1DIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_UPSTREAM_DIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1LEAD_1FOLLOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_LEAD_FOLLOW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1TURN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_TURN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1VCLASS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_VCLASS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1VTYPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_VTYPE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1FIELD_1OF_1VISION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_FIELD_OF_VISION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FILTER_1TYPE_1LATERAL_1DIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FILTER_TYPE_LATERAL_DIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TRACI_1ID_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TRACI_ID_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ID_1COUNT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ID_COUNT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_AUTOMATIC_1VARIABLES_1SUBSCRIPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::AUTOMATIC_VARIABLES_SUBSCRIPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_AUTOMATIC_1CONTEXT_1SUBSCRIPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::AUTOMATIC_CONTEXT_SUBSCRIPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_GENERIC_1ATTRIBUTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::GENERIC_ATTRIBUTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1VEHICLE_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1MEAN_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_MEAN_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1VEHICLE_1ID_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_ID_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1OCCUPANCY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_OCCUPANCY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1VEHICLE_1HALTING_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_HALTING_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1LENGTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_LENGTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1TIME_1SINCE_1DETECTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_TIME_SINCE_DETECTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1VEHICLE_1DATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_DATA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INTERVAL_1OCCUPANCY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INTERVAL_OCCUPANCY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INTERVAL_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INTERVAL_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INTERVAL_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INTERVAL_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INTERVAL_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INTERVAL_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1OCCUPANCY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_OCCUPANCY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_JAM_1LENGTH_1VEHICLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::JAM_LENGTH_VEHICLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_JAM_1LENGTH_1METERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::JAM_LENGTH_METERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INTERVAL_1MAX_1JAM_1LENGTH_1METERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INTERVAL_MAX_JAM_LENGTH_METERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1MAX_1JAM_1LENGTH_1METERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_MAX_JAM_LENGTH_METERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1TRAVELTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_TRAVELTIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1MEAN_1HALTING_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_MEAN_HALTING_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LAST_1INTERVAL_1VEHICLE_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_VEHICLE_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIRTUAL_1DETECTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIRTUAL_DETECTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LAST_1STEP_1PERSON_1ID_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LAST_STEP_PERSON_ID_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NAME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NAME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FOLLOW_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FOLLOW_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SECURE_1GAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SECURE_GAP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1DELAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_DELAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1ARRIVALDELAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_ARRIVALDELAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TIMELOSS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TIMELOSS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BEGIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BEGIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1END_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_END;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VTYPES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VTYPES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VEHSPERHOUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VEHSPERHOUR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PASSED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PASSED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1INSERTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_INSERTED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1REMOVED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_REMOVED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTE_1PROBE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTE_PROBE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SET_1FLOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SET_FLOW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1RED_1YELLOW_1GREEN_1STATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_RED_YELLOW_GREEN_STATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1PHASE_1INDEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_PHASE_INDEX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1PROGRAM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_PROGRAM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1PHASE_1DURATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_PHASE_DURATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1BLOCKING_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_BLOCKING_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONTROLLED_1LANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONTROLLED_LANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONTROLLED_1LINKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONTROLLED_LINKS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CURRENT_1PHASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CURRENT_PHASE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CURRENT_1PROGRAM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CURRENT_PROGRAM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1RIVAL_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_RIVAL_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1PRIORITY_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_PRIORITY_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONTROLLED_1JUNCTIONS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONTROLLED_JUNCTIONS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1COMPLETE_1DEFINITION_1RYG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_COMPLETE_DEFINITION_RYG;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1COMPLETE_1PROGRAM_1RYG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_COMPLETE_PROGRAM_RYG;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1NEXT_1SWITCH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_NEXT_SWITCH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1EXTERNAL_1STATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_EXTERNAL_STATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONSTRAINT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONSTRAINT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONSTRAINT_1SWAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONSTRAINT_SWAP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONSTRAINT_1BYFOE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONSTRAINT_BYFOE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONSTRAINT_1REMOVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONSTRAINT_REMOVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TL_1CONSTRAINT_1UPDATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TL_CONSTRAINT_UPDATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1LINK_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_LINK_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1EDGE_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_EDGE_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1LINKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_LINKS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1ALLOWED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_ALLOWED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1DISALLOWED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_DISALLOWED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LANE_1CHANGES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::LANE_CHANGES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FOES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FOES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SLOPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SLOPE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PREV_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PREV_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FRICTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FRICTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEED_1LAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEED_LAT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MAXSPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MAXSPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1POSITION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_POSITION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EXIT_1POSITIONS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EXIT_POSITIONS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1POSITION3D_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_POSITION3D;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ANGLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ANGLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LENGTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LENGTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1COLOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_COLOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ACCEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ACCEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DECEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DECEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EMERGENCY_1DECEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EMERGENCY_DECEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1APPARENT_1DECEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_APPARENT_DECEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ACTIONSTEPLENGTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ACTIONSTEPLENGTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LASTACTIONTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LASTACTIONTIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TAU_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TAU;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VEHICLECLASS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VEHICLECLASS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EMISSIONCLASS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EMISSIONCLASS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SHAPECLASS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SHAPECLASS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MINGAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MINGAP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1WIDTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_WIDTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SHAPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SHAPE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TYPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TYPE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROAD_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROAD_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANE_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANE_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANE_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANE_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DIST_1TO_1DETECTOR_1END_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DIST_TO_DETECTOR_END;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANE_1INDEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANE_INDEX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTE_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTE_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EDGES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EDGES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1PARAMETER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_PARAMETER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EXIT_1LANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EXIT_LANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1UPDATE_1BESTLANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_UPDATE_BESTLANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FILL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1IMAGEFILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_IMAGEFILE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANEPOSITION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANEPOSITION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EDGE_1TRAVELTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EDGE_TRAVELTIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EDGE_1EFFORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EDGE_EFFORT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1CURRENT_1TRAVELTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_CURRENT_TRAVELTIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SIGNALS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SIGNALS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MOVE_1TO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MOVE_TO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ADD_1DYNAMICS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ADD_DYNAMICS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1HIGHLIGHT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_HIGHLIGHT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1IMPERFECTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_IMPERFECTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEED_1FACTOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEED_FACTOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEED_1DEVIATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEED_DEVIATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTING_1MODE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTING_MODE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEED_1WITHOUT_1TRACI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEED_WITHOUT_TRACI;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BEST_1LANES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BEST_LANES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SPEEDSETMODE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SPEEDSETMODE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MOVE_1TO_1XY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MOVE_TO_XY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOPSTATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOPSTATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANECHANGE_1MODE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANECHANGE_MODE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ALLOWED_1SPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ALLOWED_SPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LANEPOSITION_1LAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LANEPOSITION_LAT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LATALIGNMENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LATALIGNMENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MAXSPEED_1LAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MAXSPEED_LAT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MINGAP_1LAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MINGAP_LAT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1HEIGHT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_HEIGHT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LINE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LINE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEIGHBORS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEIGHBORS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1CO2EMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_CO2EMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1COEMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_COEMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1HCEMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_HCEMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PMXEMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PMXEMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NOXEMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NOXEMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FUELCONSUMPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FUELCONSUMPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NOISEEMISSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NOISEEMISSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PERSON_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PERSON_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LICENSE_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LICENSE_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PERSON_1CAPACITY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PERSON_CAPACITY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPARTURE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPARTURE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPART_1DELAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPART_DELAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BOARDING_1DURATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BOARDING_DURATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BUS_1STOP_1ID_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BUS_STOP_ID_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BUS_1STOP_1WAITING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BUS_STOP_WAITING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1BUS_1STOP_1WAITING_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_BUS_STOP_WAITING_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LEADER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LEADER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1FOLLOWER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_FOLLOWER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTE_1INDEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTE_INDEX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1WAITING_1TIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_WAITING_TIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ACCUMULATED_1WAITING_1TIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ACCUMULATED_WAITING_TIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEXT_1TLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEXT_TLS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEXT_1STOPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEXT_STOPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEXT_1STOPS2_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEXT_STOPS2;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEXT_1LINKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEXT_LINKS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ACCELERATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ACCELERATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVALPOS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVALPOS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVALLANE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVALLANE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVALSPEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVALSPEED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1MESSAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_MESSAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TIME_1STEP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TIME_STEP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ELECTRICITYCONSUMPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ELECTRICITYCONSUMPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LOADED_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LOADED_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LOADED_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LOADED_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPARTED_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPARTED_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPARTED_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPARTED_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TELEPORT_1STARTING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TELEPORT_STARTING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TELEPORT_1STARTING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TELEPORT_STARTING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TELEPORT_1ENDING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TELEPORT_ENDING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TELEPORT_1ENDING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TELEPORT_ENDING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVED_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVED_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVED_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVED_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DELTA_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DELTA_T;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NET_1BOUNDING_1BOX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NET_BOUNDING_BOX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1MIN_1EXPECTED_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_MIN_EXPECTED_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPARTED_1PERSONS_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPARTED_PERSONS_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DEPARTED_1PERSONS_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DEPARTED_PERSONS_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVED_1PERSONS_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVED_PERSONS_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ARRIVED_1PERSONS_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ARRIVED_PERSONS_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1STARTING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_STARTING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1STARTING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_STARTING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1ENDING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_ENDING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STOP_1ENDING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STOP_ENDING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1STARTING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_STARTING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1STARTING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_STARTING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1MANEUVERING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_MANEUVERING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1MANEUVERING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_MANEUVERING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1ENDING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_ENDING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARKING_1ENDING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARKING_ENDING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1COLLIDING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_COLLIDING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1COLLIDING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_COLLIDING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EMERGENCYSTOPPING_1VEHICLES_1NUMBER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EMERGENCYSTOPPING_VEHICLES_NUMBER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1EMERGENCYSTOPPING_1VEHICLES_1IDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_EMERGENCYSTOPPING_VEHICLES_IDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SCALE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SCALE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1CLEAR_1PENDING_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_CLEAR_PENDING_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PENDING_1VEHICLES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PENDING_VEHICLES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1OPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_OPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1SAVE_1SIMSTATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_SAVE_SIMSTATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1LOAD_1SIMSTATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_LOAD_SIMSTATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1COLLISIONS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_COLLISIONS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1LOADED_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_LOADED_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TELEPORTING_1LIST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TELEPORTING_LIST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARAMETER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARAMETER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1PARAMETER_1WITH_1KEY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_PARAMETER_WITH_KEY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ADD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ADD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_COPY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::COPY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POSITION_1CONVERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::POSITION_CONVERSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_DISTANCE_1REQUEST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::DISTANCE_REQUEST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1DISTANCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_DISTANCE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ADD_1FULL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ADD_FULL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FIND_1ROUTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FIND_ROUTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_FIND_1INTERMODAL_1ROUTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::FIND_INTERMODAL_ROUTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1REROUTE_1TRAVELTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_REROUTE_TRAVELTIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_CMD_1REROUTE_1EFFORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::CMD_REROUTE_EFFORT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1ROUTE_1VALID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_ROUTE_VALID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1NEXT_1EDGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_NEXT_EDGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1STAGES_1REMAINING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_STAGES_REMAINING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VEHICLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VEHICLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_APPEND_1STAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::APPEND_STAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REPLACE_1STAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REPLACE_STAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_REMOVE_1STAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::REMOVE_STAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TAXI_1RESERVATIONS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TAXI_RESERVATIONS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_SPLIT_1TAXI_1RESERVATIONS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::SPLIT_TAXI_RESERVATIONS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SAMPLE_1LAST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SAMPLE_LAST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SAMPLE_1CURRENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SAMPLE_CURRENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIEW_1ZOOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIEW_ZOOM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIEW_1OFFSET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIEW_OFFSET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIEW_1SCHEMA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIEW_SCHEMA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1VIEW_1BOUNDARY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_VIEW_BOUNDARY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SELECT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SELECT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1SCREENSHOT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_SCREENSHOT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1TRACK_1VEHICLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_TRACK_VEHICLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VAR_1HAS_1VIEW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VAR_HAS_VIEW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getRedYellowGreenState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getRedYellowGreenState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getAllProgramLogics(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getAllProgramLogics((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = new std::vector< libsumo::TraCILogic >((const std::vector< libsumo::TraCILogic > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledJunctions(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledJunctions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledLinks(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::vector< libsumo::TraCILink > > **)&jresult = new std::vector< std::vector< libsumo::TraCILink > >((const std::vector< std::vector< libsumo::TraCILink > > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getProgram(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getProgram((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPhase(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::TrafficLight::getPhase((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPhaseName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getPhaseName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPhaseDuration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::TrafficLight::getPhaseDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getNextSwitch(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::TrafficLight::getNextSwitch((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getServedPersonCount(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = (int)libsumo::TrafficLight::getServedPersonCount((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getBlockingVehicles(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getBlockingVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getRivalVehicles(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getRivalVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPriorityVehicles(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getPriorityVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getConstraints_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getConstraints((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = new std::vector< libsumo::TraCISignalConstraint >((const std::vector< libsumo::TraCISignalConstraint > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getConstraints_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getConstraints((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = new std::vector< libsumo::TraCISignalConstraint >((const std::vector< libsumo::TraCISignalConstraint > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getConstraintsByFoe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getConstraintsByFoe((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = new std::vector< libsumo::TraCISignalConstraint >((const std::vector< libsumo::TraCISignalConstraint > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getConstraintsByFoe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getConstraintsByFoe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = new std::vector< libsumo::TraCISignalConstraint >((const std::vector< libsumo::TraCISignalConstraint > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::TrafficLight::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::TrafficLight::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::TrafficLight::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::TrafficLight::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setRedYellowGreenState(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::setRedYellowGreenState((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setPhase(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhase((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setPhaseName(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::setPhaseName((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setProgram(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::setProgram((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setPhaseDuration(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhaseDuration((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setProgramLogic(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCILogic **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCILogic const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setProgramLogic((std::string const &)*arg1,(libsumo::TraCILogic const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1swapConstraints(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      result = libsumo::TrafficLight::swapConstraints((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCISignalConstraint > **)&jresult = new std::vector< libsumo::TraCISignalConstraint >((const std::vector< libsumo::TraCISignalConstraint > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1removeConstraints(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::TrafficLight::removeConstraints((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1updateConstraints_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::updateConstraints((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1updateConstraints_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::TrafficLight::updateConstraints((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getCompleteRedYellowGreenDefinition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getCompleteRedYellowGreenDefinition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = new std::vector< libsumo::TraCILogic >((const std::vector< libsumo::TraCILogic > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setCompleteRedYellowGreenDefinition(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCILogic **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCILogic const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setCompleteRedYellowGreenDefinition((std::string const &)*arg1,(libsumo::TraCILogic const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setNemaSplits(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setNemaSplits((std::string const &)*arg1,(std::vector< double > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setNemaMaxGreens(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< double > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setNemaMaxGreens((std::string const &)*arg1,(std::vector< double > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setNemaCycleLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setNemaCycleLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setNemaOffset(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setNemaOffset((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TrafficLight(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TrafficLight *arg1 = (libsumo::TrafficLight *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TrafficLight **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor((libsumo::TraCIColor &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getPersonCapacity(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::VehicleType::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getBoardingDuration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::VehicleType::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::VehicleType::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::VehicleType::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::VehicleType::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setActionStepLength_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::VehicleType::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setActionStepLength_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1copy(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::copy((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedDeviation((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getScale(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getScale((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setScale(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setScale((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::VehicleType::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VehicleType::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1VehicleType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::VehicleType *arg1 = (libsumo::VehicleType *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::VehicleType **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLateralSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLateralSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAcceleration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAcceleration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedWithoutTraCI(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedWithoutTraCI((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition3D(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPosition3D((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAngle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSlope(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSlope((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoadID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRoadID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneIndex(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneIndex((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTypeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDeparture(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDeparture((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDepartDelay(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDepartDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRouteIndex(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getRouteIndex((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLateralLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLateralLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPersonNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getPersonNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLicenseNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getLicenseNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPersonIDList(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPersonIDList((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLeader_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLeader_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFollower_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getFollower((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFollower_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getFollower((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getJunctionFoes_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::vector< libsumo::TraCIJunctionFoe > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getJunctionFoes((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIJunctionFoe > **)&jresult = new std::vector< libsumo::TraCIJunctionFoe >((const std::vector< libsumo::TraCIJunctionFoe > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getJunctionFoes_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getJunctionFoes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIJunctionFoe > **)&jresult = new std::vector< libsumo::TraCIJunctionFoe >((const std::vector< libsumo::TraCIJunctionFoe > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAccumulatedWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAccumulatedWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAdaptedTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAdaptedTraveltime((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEffort(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getEffort((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1isRouteValid(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::Vehicle::isRouteValid((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoute(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRoute((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSignals(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getSignals((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getBestLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIBestLanesData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getBestLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIBestLanesData > **)&jresult = new std::vector< libsumo::TraCIBestLanesData >((const std::vector< libsumo::TraCIBestLanesData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNextTLS(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextTLSData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getNextTLS((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextTLSData > **)&jresult = new std::vector< libsumo::TraCINextTLSData >((const std::vector< libsumo::TraCINextTLSData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNextStops(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getNextStops((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = new std::vector< libsumo::TraCINextStopData >((const std::vector< libsumo::TraCINextStopData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNextLinks(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIConnection > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getNextLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = new std::vector< libsumo::TraCIConnection >((const std::vector< libsumo::TraCIConnection > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStops_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getStops((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = new std::vector< libsumo::TraCINextStopData >((const std::vector< libsumo::TraCINextStopData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStops_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getStops((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = new std::vector< libsumo::TraCINextStopData >((const std::vector< libsumo::TraCINextStopData > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getStopState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = libsumo::Vehicle::getStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDistance(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDistance((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance2D(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance2D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllowedSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAllowedSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getSpeedMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneChangeMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneChangeMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoutingMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getRoutingMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLine(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLine((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getVia(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getVia((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneChangeState(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::pair< int,int > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLaneChangeState((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,int > **)&jresult = new std::pair< int,int >((const std::pair< int,int > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLastActionTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLastActionTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNeighbors(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getNeighbors((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::pair< std::string,double > > **)&jresult = new std::vector< std::pair< std::string,double > >((const std::vector< std::pair< std::string,double > > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFollowSpeed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getFollowSpeed((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFollowSpeed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (double)libsumo::Vehicle::getFollowSpeed((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSecureGap_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jstring jarg5) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  std::string *arg5 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSecureGap((std::string const &)*arg1,arg2,arg3,arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSecureGap_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Vehicle::getSecureGap((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getStopSpeed((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopDelay(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getStopDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopArrivalDelay(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getStopArrivalDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTimeLoss(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTaxiFleet_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = libsumo::Vehicle::getTaxiFleet(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTaxiFleet_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getTaxiFleet();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLoadedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getLoadedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTeleportingIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getTeleportingIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Vehicle::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Vehicle::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Vehicle::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor((libsumo::TraCIColor &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPersonCapacity(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getBoardingDuration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6, jdouble jarg7, jdouble jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  double arg8 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6, jdouble jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8, jdouble jarg9, jint jarg10) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8, jdouble jarg9) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1replaceStop_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8, jdouble jarg9, jint jarg10) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8, jdouble jarg9) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7, jdouble jarg8) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jint jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1insertStop_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStopParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Vehicle::setStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteParkingArea(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteParkingArea((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1resume(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::resume((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jint jarg14, jint jarg15, jint jarg16) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  arg14 = (int)jarg14; 
  arg15 = (int)jarg15; 
  arg16 = (int)jarg16; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14,arg15,arg16);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jint jarg14, jint jarg15) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  int arg15 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  arg14 = (int)jarg14; 
  arg15 = (int)jarg15; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14,arg15);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jint jarg14) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  arg14 = (int)jarg14; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_113(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_114(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeTarget(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::changeTarget((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeLane(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLane((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeLaneRelative(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLaneRelative((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeSublane(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::changeSublane((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1slowDown(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::slowDown((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1openGap_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jstring jarg7) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  std::string *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1openGap_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1openGap_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1deactivateGapControl(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::deactivateGapControl((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1requestToC(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::requestToC((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAcceleration(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setAcceleration((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setPreviousSpeed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setPreviousSpeed((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setPreviousSpeed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setPreviousSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeedMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLaneChangeMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setLaneChangeMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRoutingMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setRoutingMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setRouteID((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRoute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRoute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setRoute((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLateralLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setLateralLanePosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1updateBestLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::updateBestLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteTraveltime_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  std::string *arg1 = 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::rerouteTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteTraveltime_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteEffort(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteEffort((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSignals(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSignals((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jint jarg7, jdouble jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jint jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jchar jarg2) {
  std::string *arg1 = 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (char)jarg2; 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLine(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setLine((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setVia(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setVia((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1highlight_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1dispatchTaxi(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::dispatchTaxi((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setActionStepLength_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Vehicle::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setActionStepLength_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Vehicle::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeLeader_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeLeader_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeLeader_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeLeader_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLanes_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2, jdouble jarg3, jdouble jarg4) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLanes_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2, jdouble jarg3) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLanes_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLanes_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< int > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterNoOpposite(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterNoOpposite();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterDownstreamDistance(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterDownstreamDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterUpstreamDistance(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterUpstreamDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterCFManeuver_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  double arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterCFManeuver_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterCFManeuver_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLCManeuver_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jdouble jarg3, jdouble jarg4) {
  int arg1 ;
  bool arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLCManeuver_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jdouble jarg3) {
  int arg1 ;
  bool arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLCManeuver_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  int arg1 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLCManeuver_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLCManeuver_1_1SWIG_14(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLeadFollow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< int > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLeadFollow((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterTurn_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  double arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterTurn_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterTurn_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterVClass(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterVClass((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterVType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterVType((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterFieldOfVision(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterFieldOfVision(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLateralDistance_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLateralDistance_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  double arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1addSubscriptionFilterLateralDistance_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Vehicle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Vehicle *arg1 = (libsumo::Vehicle *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Vehicle **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPosition3D(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getPosition3D((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIPosition > **)&jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition((libsumo::TraCIPosition &)result)); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getRoadID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getRoadID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTypeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getNextEdge(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getNextEdge((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getRemainingStages(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Person::getRemainingStages((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Person::getStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getStage((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEdges_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEdges_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAngle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSlope(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSlope((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTaxiReservations_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  std::vector< libsumo::TraCIReservation > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = libsumo::Person::getTaxiReservations(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIReservation > **)&jresult = new std::vector< libsumo::TraCIReservation >((const std::vector< libsumo::TraCIReservation > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTaxiReservations_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIReservation > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getTaxiReservations();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIReservation > **)&jresult = new std::vector< libsumo::TraCIReservation >((const std::vector< libsumo::TraCIReservation > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1splitTaxiReservation(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  jstring jresult = 0 ;
  std::string arg1 ;
  std::vector< std::string > *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return 0;
  } 
  {
    try {
      result = libsumo::Person::splitTaxiReservation(arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Person::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Person::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Person::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr<  libsumo::TraCIColor > **)&jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor((libsumo::TraCIColor &)result)); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPersonCapacity(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Person::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getBoardingDuration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jstring jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::string arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  (&arg5)->assign(arg5_pstr);
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendStage(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIStage *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIStage **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIStage const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::appendStage((std::string const &)*arg1,(libsumo::TraCIStage const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1replaceStage(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::TraCIStage *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::TraCIStage **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIStage const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::replaceStage((std::string const &)*arg1,arg2,(libsumo::TraCIStage const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendDrivingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendDrivingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1removeStage(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Person::removeStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1rerouteTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::rerouteTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveToXY_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jint jarg6, jdouble jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveToXY_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveToXY_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveToXY_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jchar jarg2) {
  std::string *arg1 = 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (char)jarg2; 
  {
    try {
      libsumo::Person::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  
  arg2 = (libsumo::TraCIColor *)((*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2) ? (*(std::shared_ptr< const libsumo::TraCIColor > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setActionStepLength_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Person::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setActionStepLength_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Person::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Person(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Person *arg1 = (libsumo::Person *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Person **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getEdgeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getVehsPerHour(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Calibrator::getVehsPerHour((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Calibrator::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getTypeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getBegin(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Calibrator::getBegin((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getEnd(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Calibrator::getEnd((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getRouteProbeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getRouteProbeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getVTypes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getVTypes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getPassed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Calibrator::getPassed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getInserted(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Calibrator::getInserted((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getRemoved(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Calibrator::getRemoved((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Calibrator::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Calibrator::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Calibrator::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Calibrator::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Calibrator::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Calibrator::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Calibrator::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Calibrator::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Calibrator::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Calibrator::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1setFlow_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1setFlow_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6, jstring jarg7, jstring jarg8) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Calibrator_1setFlow_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6, jstring jarg7) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Calibrator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Calibrator *arg1 = (libsumo::Calibrator *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Calibrator **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getStartPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::BusStop::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getEndPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::BusStop::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getVehicleCount(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::BusStop::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getPersonCount(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::BusStop::getPersonCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getPersonIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getPersonIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::BusStop::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::BusStop::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::BusStop::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::BusStop::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::BusStop::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::BusStop::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::BusStop::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::BusStop::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::BusStop::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_BusStop_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::BusStop::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1BusStop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::BusStop *arg1 = (libsumo::BusStop *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::BusStop **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getStartPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::ParkingArea::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getEndPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::ParkingArea::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getVehicleCount(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::ParkingArea::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ParkingArea::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::ParkingArea::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::ParkingArea::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::ParkingArea::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ParkingArea::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ParkingArea::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ParkingArea::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ParkingArea_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ParkingArea::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1ParkingArea(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::ParkingArea *arg1 = (libsumo::ParkingArea *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::ParkingArea **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getStartPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::ChargingStation::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getEndPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::ChargingStation::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getVehicleCount(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::ChargingStation::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ChargingStation::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::ChargingStation::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::ChargingStation::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::ChargingStation::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ChargingStation::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::ChargingStation::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::ChargingStation::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_ChargingStation_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::ChargingStation::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1ChargingStation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::ChargingStation *arg1 = (libsumo::ChargingStation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::ChargingStation **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getStartPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::OverheadWire::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getEndPos(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::OverheadWire::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getVehicleCount(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::OverheadWire::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::OverheadWire::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::OverheadWire::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::OverheadWire::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::OverheadWire::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::OverheadWire::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::OverheadWire::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::OverheadWire::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_OverheadWire_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::OverheadWire::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1OverheadWire(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::OverheadWire *arg1 = (libsumo::OverheadWire *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::OverheadWire **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Rerouter::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Rerouter::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Rerouter::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Rerouter::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Rerouter::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Rerouter::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Rerouter::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Rerouter::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Rerouter::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Rerouter::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Rerouter_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::Rerouter::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Rerouter(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Rerouter *arg1 = (libsumo::Rerouter *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Rerouter **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MeanData::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::MeanData::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::MeanData::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::MeanData::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::MeanData::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::MeanData::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MeanData::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MeanData::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MeanData::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MeanData::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MeanData_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::MeanData::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1MeanData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::MeanData *arg1 = (libsumo::MeanData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::MeanData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VariableSpeedSign::getLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VariableSpeedSign::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::VariableSpeedSign::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::VariableSpeedSign::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::VariableSpeedSign::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::VariableSpeedSign::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::VariableSpeedSign::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VariableSpeedSign::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VariableSpeedSign::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VariableSpeedSign::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VariableSpeedSign::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VariableSpeedSign_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::VariableSpeedSign::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1VariableSpeedSign(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::VariableSpeedSign *arg1 = (libsumo::VariableSpeedSign *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::VariableSpeedSign **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getEdgeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::RouteProbe::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1sampleLastRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::RouteProbe::sampleLastRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1sampleCurrentRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::RouteProbe::sampleCurrentRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::RouteProbe::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::RouteProbe::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::RouteProbe::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getParameterWithKey(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::RouteProbe::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,std::string > **)&jresult = new std::pair< std::string,std::string >((const std::pair< std::string,std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::RouteProbe::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jlong jarg5, jobject jarg5_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = *(libsumo::TraCIResults **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1unsubscribe(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::RouteProbe::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6, jlong jarg7, jobject jarg7_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg7_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(libsumo::TraCIResults **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIResults const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1unsubscribeContext(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::RouteProbe::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::RouteProbe::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::ContextSubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::RouteProbe::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::RouteProbe::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeParameterWithKey_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeParameterWithKey_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1subscribeParameterWithKey_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_RouteProbe_1DOMAIN_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)libsumo::RouteProbe::DOMAIN_ID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1RouteProbe(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::RouteProbe *arg1 = (libsumo::RouteProbe *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::RouteProbe **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIPosition > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIPosition > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIRoadPosition > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIRoadPosition > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIColor > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIColor > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPositionVector_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIPositionVector > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIPositionVector > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIInt > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIInt > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIDouble > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIDouble > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIString > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIString > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIStringList > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIStringList > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDoubleList_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCIDoubleList > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCIDoubleList > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCINextStopData > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCINextStopData > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopDataVector_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< libsumo::TraCINextStopDataVector > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< libsumo::TraCINextStopDataVector > **)&jarg1;
    *(std::shared_ptr< libsumo::TraCIResult > **)&baseptr = argp1 ? new std::shared_ptr< libsumo::TraCIResult >(*argp1) : 0;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

