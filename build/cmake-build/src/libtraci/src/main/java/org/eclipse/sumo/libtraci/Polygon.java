/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.eclipse.sumo.libtraci;

public class Polygon {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Polygon(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Polygon obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtraciJNI.delete_Polygon(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static String getType(String polygonID) {
    return libtraciJNI.Polygon_getType(polygonID);
  }

  public static TraCIPositionVector getShape(String polygonID) {
    return new TraCIPositionVector(libtraciJNI.Polygon_getShape(polygonID), true);
  }

  public static TraCIColor getColor(String polygonID) {
    return new TraCIColor(libtraciJNI.Polygon_getColor(polygonID), true);
  }

  public static boolean getFilled(String polygonID) {
    return libtraciJNI.Polygon_getFilled(polygonID);
  }

  public static double getLineWidth(String polygonID) {
    return libtraciJNI.Polygon_getLineWidth(polygonID);
  }

  public static StringVector getIDList() {
    return new StringVector(libtraciJNI.Polygon_getIDList(), true);
  }

  public static int getIDCount() {
    return libtraciJNI.Polygon_getIDCount();
  }

  public static String getParameter(String objectID, String param) {
    return libtraciJNI.Polygon_getParameter(objectID, param);
  }

  public static StringStringPair getParameterWithKey(String objectID, String key) {
    return new StringStringPair(libtraciJNI.Polygon_getParameterWithKey(objectID, key), true);
  }

  public static void setParameter(String objectID, String param, String value) {
    libtraciJNI.Polygon_setParameter(objectID, param, value);
  }

  public static void subscribe(String objectID, IntVector varIDs, double begin, double end, TraCIResults params) {
    libtraciJNI.Polygon_subscribe__SWIG_0(objectID, IntVector.getCPtr(varIDs), varIDs, begin, end, TraCIResults.getCPtr(params), params);
  }

  public static void subscribe(String objectID, IntVector varIDs, double begin, double end) {
    libtraciJNI.Polygon_subscribe__SWIG_1(objectID, IntVector.getCPtr(varIDs), varIDs, begin, end);
  }

  public static void subscribe(String objectID, IntVector varIDs, double begin) {
    libtraciJNI.Polygon_subscribe__SWIG_2(objectID, IntVector.getCPtr(varIDs), varIDs, begin);
  }

  public static void subscribe(String objectID, IntVector varIDs) {
    libtraciJNI.Polygon_subscribe__SWIG_3(objectID, IntVector.getCPtr(varIDs), varIDs);
  }

  public static void subscribe(String objectID) {
    libtraciJNI.Polygon_subscribe__SWIG_4(objectID);
  }

  public static void unsubscribe(String objectID) {
    libtraciJNI.Polygon_unsubscribe(objectID);
  }

  public static void subscribeContext(String objectID, int domain, double dist, IntVector varIDs, double begin, double end, TraCIResults params) {
    libtraciJNI.Polygon_subscribeContext__SWIG_0(objectID, domain, dist, IntVector.getCPtr(varIDs), varIDs, begin, end, TraCIResults.getCPtr(params), params);
  }

  public static void subscribeContext(String objectID, int domain, double dist, IntVector varIDs, double begin, double end) {
    libtraciJNI.Polygon_subscribeContext__SWIG_1(objectID, domain, dist, IntVector.getCPtr(varIDs), varIDs, begin, end);
  }

  public static void subscribeContext(String objectID, int domain, double dist, IntVector varIDs, double begin) {
    libtraciJNI.Polygon_subscribeContext__SWIG_2(objectID, domain, dist, IntVector.getCPtr(varIDs), varIDs, begin);
  }

  public static void subscribeContext(String objectID, int domain, double dist, IntVector varIDs) {
    libtraciJNI.Polygon_subscribeContext__SWIG_3(objectID, domain, dist, IntVector.getCPtr(varIDs), varIDs);
  }

  public static void subscribeContext(String objectID, int domain, double dist) {
    libtraciJNI.Polygon_subscribeContext__SWIG_4(objectID, domain, dist);
  }

  public static void unsubscribeContext(String objectID, int domain, double dist) {
    libtraciJNI.Polygon_unsubscribeContext(objectID, domain, dist);
  }

  public static SubscriptionResults getAllSubscriptionResults() {
    return new SubscriptionResults(libtraciJNI.Polygon_getAllSubscriptionResults(), true);
  }

  public static TraCIResults getSubscriptionResults(String objectID) {
    return new TraCIResults(libtraciJNI.Polygon_getSubscriptionResults(objectID), true);
  }

  public static ContextSubscriptionResults getAllContextSubscriptionResults() {
    return new ContextSubscriptionResults(libtraciJNI.Polygon_getAllContextSubscriptionResults(), true);
  }

  public static SubscriptionResults getContextSubscriptionResults(String objectID) {
    return new SubscriptionResults(libtraciJNI.Polygon_getContextSubscriptionResults(objectID), true);
  }

  public static void subscribeParameterWithKey(String objectID, String key, double beginTime, double endTime) {
    libtraciJNI.Polygon_subscribeParameterWithKey__SWIG_0(objectID, key, beginTime, endTime);
  }

  public static void subscribeParameterWithKey(String objectID, String key, double beginTime) {
    libtraciJNI.Polygon_subscribeParameterWithKey__SWIG_1(objectID, key, beginTime);
  }

  public static void subscribeParameterWithKey(String objectID, String key) {
    libtraciJNI.Polygon_subscribeParameterWithKey__SWIG_2(objectID, key);
  }

  public static int getDOMAIN_ID() {
    return libtraciJNI.Polygon_DOMAIN_ID_get();
  }

  public static void setType(String polygonID, String setType) {
    libtraciJNI.Polygon_setType(polygonID, setType);
  }

  public static void setShape(String polygonID, TraCIPositionVector shape) {
    libtraciJNI.Polygon_setShape(polygonID, TraCIPositionVector.getCPtr(shape), shape);
  }

  public static void setColor(String polygonID, TraCIColor color) {
    libtraciJNI.Polygon_setColor(polygonID, TraCIColor.getCPtr(color), color);
  }

  public static void add(String polygonID, TraCIPositionVector shape, TraCIColor color, boolean fill, String polygonType, int layer, double lineWidth) {
    libtraciJNI.Polygon_add__SWIG_0(polygonID, TraCIPositionVector.getCPtr(shape), shape, TraCIColor.getCPtr(color), color, fill, polygonType, layer, lineWidth);
  }

  public static void add(String polygonID, TraCIPositionVector shape, TraCIColor color, boolean fill, String polygonType, int layer) {
    libtraciJNI.Polygon_add__SWIG_1(polygonID, TraCIPositionVector.getCPtr(shape), shape, TraCIColor.getCPtr(color), color, fill, polygonType, layer);
  }

  public static void add(String polygonID, TraCIPositionVector shape, TraCIColor color, boolean fill, String polygonType) {
    libtraciJNI.Polygon_add__SWIG_2(polygonID, TraCIPositionVector.getCPtr(shape), shape, TraCIColor.getCPtr(color), color, fill, polygonType);
  }

  public static void add(String polygonID, TraCIPositionVector shape, TraCIColor color, boolean fill) {
    libtraciJNI.Polygon_add__SWIG_3(polygonID, TraCIPositionVector.getCPtr(shape), shape, TraCIColor.getCPtr(color), color, fill);
  }

  public static void add(String polygonID, TraCIPositionVector shape, TraCIColor color) {
    libtraciJNI.Polygon_add__SWIG_4(polygonID, TraCIPositionVector.getCPtr(shape), shape, TraCIColor.getCPtr(color), color);
  }

  public static void addDynamics(String polygonID, String trackedObjectID, DoubleVector timeSpan, DoubleVector alphaSpan, boolean looped, boolean rotate) {
    libtraciJNI.Polygon_addDynamics__SWIG_0(polygonID, trackedObjectID, DoubleVector.getCPtr(timeSpan), timeSpan, DoubleVector.getCPtr(alphaSpan), alphaSpan, looped, rotate);
  }

  public static void addDynamics(String polygonID, String trackedObjectID, DoubleVector timeSpan, DoubleVector alphaSpan, boolean looped) {
    libtraciJNI.Polygon_addDynamics__SWIG_1(polygonID, trackedObjectID, DoubleVector.getCPtr(timeSpan), timeSpan, DoubleVector.getCPtr(alphaSpan), alphaSpan, looped);
  }

  public static void addDynamics(String polygonID, String trackedObjectID, DoubleVector timeSpan, DoubleVector alphaSpan) {
    libtraciJNI.Polygon_addDynamics__SWIG_2(polygonID, trackedObjectID, DoubleVector.getCPtr(timeSpan), timeSpan, DoubleVector.getCPtr(alphaSpan), alphaSpan);
  }

  public static void addDynamics(String polygonID, String trackedObjectID, DoubleVector timeSpan) {
    libtraciJNI.Polygon_addDynamics__SWIG_3(polygonID, trackedObjectID, DoubleVector.getCPtr(timeSpan), timeSpan);
  }

  public static void addDynamics(String polygonID, String trackedObjectID) {
    libtraciJNI.Polygon_addDynamics__SWIG_4(polygonID, trackedObjectID);
  }

  public static void addDynamics(String polygonID) {
    libtraciJNI.Polygon_addDynamics__SWIG_5(polygonID);
  }

  public static void remove(String polygonID, int layer) {
    libtraciJNI.Polygon_remove__SWIG_0(polygonID, layer);
  }

  public static void remove(String polygonID) {
    libtraciJNI.Polygon_remove__SWIG_1(polygonID);
  }

  public static void setFilled(String polygonID, boolean filled) {
    libtraciJNI.Polygon_setFilled(polygonID, filled);
  }

  public static void setLineWidth(String polygonID, double lineWidth) {
    libtraciJNI.Polygon_setLineWidth(polygonID, lineWidth);
  }

}
